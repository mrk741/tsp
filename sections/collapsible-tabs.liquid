{% liquid 
  assign show_section = false
  for block in section.blocks
    case block.type
    when 'tab'
      if block.settings.text != blank or block.settings.page != blank
        if block.settings.heading != blank or block.settings.icon != blank or block.settings.page != blank
        assign show_section = true
        endif
      endif
    when 'topic'
      if block.settings.heading != blank or block.settings.text != blank or block.settings.button_label != blank or block.settings.button_icon != blank
        assign show_section = true
      endif
    endcase
  endfor
%}

{% if section.blocks.size > 0 and show_section or request.design_mode %}
{{ 'section-collapsible-tabs.css' | asset_url | stylesheet_tag }}

{%- liquid
  assign disable_max_width = false
  if section.settings.disable_max_width 
    assign disable_max_width = true
  elsif section.settings.grid_style == 'page' and settings.full_width_page_grid
    assign disable_max_width = true
  elsif section.settings.grid_style == 'alternative' and settings.full_width_alt_grid
    assign disable_max_width = true
  elsif section.settings.grid_style == 'secondary' and settings.full_width_second_grid
    assign disable_max_width = true
  endif

  assign max_width = '100vw'
  if disable_max_width == false and section.settings.grid_style == 'page'
      assign max_width = settings.page_width | append: 'px'
  elsif disable_max_width == false and section.settings.grid_style == 'alternative'
      assign max_width = settings.alt_grid_width | append: 'px'
  elsif disable_max_width == false and section.settings.grid_style == 'secondary'
      assign max_width = settings.second_grid_width | append: 'px'
  endif

  assign scheme1 = settings.color_schemes | first

  assign section_framing = false
  if section.settings.color_scheme != scheme1 and section.settings.section_framing != 'disable'
      assign section_framing = true
  endif

  if section.settings.media_size == 'large'
    assign media_size = 0.65
  elsif section.settings.media_size == 'half'
    assign media_size = 0.50
  elsif section.settings.media_size == 'small'
    assign media_size = 0.35
  endif
-%}

{% style %}
    #shopify-section-{{ section.id }} {
        --grid-columns: {% if section.settings.image != blank %}{% if section.settings.media_size == 'half' %}2{% else %}3{% endif %}{% else %}1{% endif %};
        --top-spacing: {{ section.settings.top_spacing }};
        --bottom-spacing: {{ section.settings.bottom_spacing }};
        --aspect-ratio: {{ section.settings.media_ratio }};
    }

    @media screen and (max-width: 768px) {
        #shopify-section-{{ section.id }} {
            --grid-columns: 1;
        }
    }
{% endstyle %}

<div class="section{% unless section_framing %} color-{{ section.settings.color_scheme }}{% endunless %} side-margins{% if section.settings.show_bottom_line %} bottom-line{% endif %}">
  <div class="collapsible-tabs section-container{% if section_framing and section.settings.section_framing == 'grid' %} {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endif %}{% unless section_framing %} {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endunless %}">
    {% if section_framing %}<div class="section-radius elem-padding-l color-{{ section.settings.color_scheme }}"><div {% if section.settings.section_framing != 'grid' %}class="{{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}"{% endif %}>{% endif %}
      {% if section.settings.subheading != blank or section.settings.heading != blank or section.settings.text != blank %}
        <div class="section-header{% if section.settings.center_text %} center{% endif %}">
          {%- if section.settings.subheading != blank -%}
            {%- liquid
              assign uppercase_subheading = false
              if section.settings.subheading_style == 'section-heading' and settings.uppercase_section_headings
                  assign uppercase_subheading = true
              elsif section.settings.subheading_style == 'secondary-heading' and settings.uppercase_secondary_headings
                  assign uppercase_subheading = true
              elsif section.settings.subheading_style == 'subheading-font' and settings.uppercase_subheadings
                  assign uppercase_subheading = true
              elsif section.settings.subheading_style == 'body-font' and settings.uppercase_body
                  assign uppercase_subheading = true
              elsif section.settings.subheading_style == 'caption-font' and settings.uppercase_caption
                  assign uppercase_subheading = true
              endif
            -%}
            <{{ section.settings.subheading_tag }} class="{{ section.settings.subheading_style }}{% if uppercase_subheading %} uppercase{% endif %} 
            {% if section.settings.subheading_style == 'subheading-font' and settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}">
            {% if section.settings.subheading_style == 'subheading-font' and settings.bolder_subheadings_font %}<b>{% endif %}
              {{ section.settings.subheading }}
            {% if section.settings.subheading_style == 'subheading-font' and settings.bolder_subheadings_font %}</b>{% endif %}
          </{{ section.settings.subheading_tag }}>
          {%- endif -%}
          {%- if section.settings.heading != blank -%}
            {%- liquid
              assign uppercase_heading = false
              if section.settings.heading_style == 'caption-font' and settings.uppercase_caption
                  assign uppercase_heading = true
              elsif section.settings.heading_style == 'subheading-font' and settings.uppercase_subheadings
                  assign uppercase_heading = true
              elsif section.settings.heading_style == 'body-font' and settings.uppercase_body
                  assign uppercase_heading = true
              elsif section.settings.heading_style == 'secondary-heading' and settings.uppercase_secondary_headings
                  assign uppercase_heading = true
              elsif section.settings.heading_style == 'section-heading' and settings.uppercase_section_headings
                  assign uppercase_heading = true
              elsif section.settings.heading_style == 'page-title' and settings.uppercase_page_titles
                  assign uppercase_heading = true
              endif

              assign heading_text = section.settings.heading       
              assign processed_text = ''
              assign split_text = heading_text | split: '['

              for part in split_text
                if part contains ']'
                  assign split_bracket = part | split: ']'
                  assign highlight_text = split_bracket[0]
                  assign after_bracket = split_bracket[1]
                  assign processed_text = processed_text | append: '<span class="highlight"><span>' | append: highlight_text | append: '</span></span>' | append: after_bracket
                else
                  assign processed_text = processed_text | append: part
                endif
              endfor

              
              assign final_text = ''
              assign split_text_curly = processed_text | split: '{'

              for part in split_text_curly
                if part contains '}'
                  assign split_curly = part | split: '}'
                  assign styled_text = split_curly[0]
                  assign after_curly = split_curly[1]
                  assign final_text = final_text | append: '<span class="styled">' | append: styled_text | append: '</span>' | append: after_curly
                else
                  assign final_text = final_text | append: part
                endif
              endfor
            -%}
            <{{ section.settings.heading_tag }} class="custom-heading {{ section.settings.heading_style }}{% if uppercase_heading %} uppercase{% endif %}{% if section.settings.heading_style == 'subheading-font' and settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}">
              {% if section.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}<b>{% endif %}{{ final_text }}{% if section.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}</b>{% endif %}
            </{{ section.settings.heading_tag }}>
          {%- endif -%}
          {%- if section.settings.text != blank -%}
            {%- liquid
              assign uppercase_text = false
              if section.settings.text_style == 'section-heading' and settings.uppercase_section_headings
                  assign uppercase_text = true
              elsif section.settings.text_style == 'secondary-heading' and settings.uppercase_secondary_headings
                  assign uppercase_text = true
              elsif section.settings.text_style == 'subheading-font' and settings.uppercase_subheadings
                  assign uppercase_text = true
              elsif section.settings.text_style == 'body-font' and settings.uppercase_body
                  assign uppercase_text = true
              elsif section.settings.text_style == 'caption-font' and settings.uppercase_caption
                  assign uppercase_text = true
              endif
            -%}
            <div class="richtext rte link-underline {{ section.settings.text_style }}{% if uppercase_text %} uppercase{% endif %} 
              {% if section.settings.text_style == 'subheading-font' %}{% if settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}{% if settings.bolder_subheadings_font %} bold{% endif %}{% endif %}">
              {{ section.settings.text }}
            </div>
        {%- endif -%} 
        </div>
      {% endif %}
      {% if section.blocks.size > 0 or section.settings.image != blank %}
      <div class="collapsible-tabs__content grid {{ section.settings.grid_style }}-grid-gaps{% if section.settings.swap_media_position %} reverse-order{% endif %}">
        {% if section.blocks.size > 0 %}
          <div class="collapsible-tabs__blocks{% if section.settings.media_size == 'small' %} column-merge{% endif %}">
            {%- for block in section.blocks -%}
              {%- case block.type -%}
                {%- when 'tab' -%}
                  {%- render 'collapsible-tab', block: block, page: block.settings.page, compact: false -%}
                {%- when 'topic' -%}
                  {%- if block.settings.heading != blank or block.settings.text != blank or block.settings.button_label != blank or block.settings.button_icon != blank and block.settings.button_link != blank -%}
                    <div class="topic-block section-block flex--column {% if section.settings.center_text %} center{% endif %}">
                      {% if block.settings.heading != blank %}
                        {%- liquid
                          assign uppercase_heading = false
                          if block.settings.heading_style == 'secondary-heading' and settings.uppercase_secondary_headings
                            assign uppercase_heading = true
                          elsif block.settings.heading_style == 'subheading-font' and settings.uppercase_subheadings
                              assign uppercase_heading = true
                          elsif block.settings.heading_style == 'body-font' and settings.uppercase_body
                              assign uppercase_heading = true
                          elsif block.settings.heading_style == 'caption-font' and settings.uppercase_caption
                              assign uppercase_heading = true
                          elsif block.settings.heading_style == 'section-heading' and settings.uppercase_section_headings
                              assign uppercase_heading = true
                          elsif block.settings.heading_style == 'page-title' and settings.uppercase_page_titles
                              assign uppercase_heading = true
                          endif

                          assign heading_text = block.settings.heading       
                          assign processed_text = ''
                          assign split_text = heading_text | split: '['

                          for part in split_text
                            if part contains ']'
                              assign split_bracket = part | split: ']'
                              assign highlight_text = split_bracket[0]
                              assign after_bracket = split_bracket[1]
                              assign processed_text = processed_text | append: '<span class="highlight"><span>' | append: highlight_text | append: '</span></span>' | append: after_bracket
                            else
                              assign processed_text = processed_text | append: part
                            endif
                          endfor

                          
                          assign final_text = ''
                          assign split_text_curly = processed_text | split: '{'

                          for part in split_text_curly
                            if part contains '}'
                              assign split_curly = part | split: '}'
                              assign styled_text = split_curly[0]
                              assign after_curly = split_curly[1]
                              assign final_text = final_text | append: '<span class="styled">' | append: styled_text | append: '</span>' | append: after_curly
                            else
                              assign final_text = final_text | append: part
                            endif
                          endfor
                        -%}
                        <p class="custom-heading {{ block.settings.heading_style }}{% if uppercase_heading %} uppercase{% endif %}{% if block.settings.heading_style == 'subheading-font' and settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}">
                          {% if block.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}<b>{% endif %}{{ final_text }}{% if block.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}</b>{% endif %}
                        </p>
                      {% endif %}
                      {% if block.settings.text != blank %}
                        {%- liquid
                          assign uppercase_text = false
                          if block.settings.text_style == 'section-heading' and settings.uppercase_section_headings
                            assign uppercase_text = true
                          elsif block.settings.text_style == 'secondary-heading' and settings.uppercase_secondary_headings
                            assign uppercase_text = true
                          elsif block.settings.text_style == 'subheading-font' and settings.uppercase_subheadings
                              assign uppercase_text = true
                          elsif block.settings.text_style == 'body-font' and settings.uppercase_body
                              assign uppercase_text = true
                          elsif block.settings.text_style == 'caption-font' and settings.uppercase_caption
                              assign uppercase_text = true
                          endif
                        -%}
                        <div class="richtext rte link-underline {{ block.settings.text_style }}{% if uppercase_text %} uppercase{% endif %} 
                          {% if block.settings.text_style == 'subheading-font' %}{% if settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}{% if settings.bolder_subheadings_font %} bold{% endif %}{% endif %}">
                          {{ block.settings.text }}
                        </div>
                      {% endif %}
                      {% if block.settings.button_label != blank or block.settings.button_icon != blank %}<{% if block.settings.button_link != blank %}a href="{{ block.settings.button_link }}"{% if block.settings.target_blank %} target="_blank"{% endif %}{% else%}span disabled{% endif %} class="topic-block__button button {{ block.settings.button_style }}-button body-font button--secondary{% if settings.use_heading_font_secondary_buttons %} heading-font-style{% endif %}{% if settings.uppercase_secondary_buttons %} uppercase{% endif %}
                      {% if block.settings.button_label != blank and block.settings.button_icon != blank %} button-block--small-padding{% endif %}{% if block.settings.button_icon != blank %} button-with-icon{% if block.settings.swap_button_icon %} icon--swap{% endif %}{% endif %}">
                        {% if block.settings.button_icon != blank %}
                          {%- liquid
                            assign icon_name = block.settings.button_icon | split: '/'
                            if icon_name.size == 3
                                assign file_name = icon_name.first | append: '_' | append: icon_name[1]
                            elsif icon_name.size == 2
                                assign file_name = icon_name.first
                            endif
                            assign icon = icon_name.last
                          -%}
                          <span class="icon-accordion flex--row icon--small">{% render 'catalog-icons', file_name: file_name, icon: icon %}</span>
                        {% endif %}
                        {% if settings.bolder_secondary_buttons_font %}<b>{% endif %}{{ block.settings.button_label }}{% if settings.bolder_secondary_buttons_font %}</b>{% endif %}
                      </{% if block.settings.button_link != blank %}a{% else%}span{% endif %}>{% endif %}
                    </div>
                  {%- endif -%}
              {%- endcase -%}
            {%- endfor -%}
          </div>
        {% endif %}
        {% if section.settings.image != blank %}
          {% liquid
            assign onload_script = ''
            assign loading_images = ''
            if settings.images_loading != 'disable'
                assign onload_script = 'this.parentNode.classList.add("lazyloaded");' 
                assign loading_images = 'lazy'
            elsif section.index > 2
              assign loading_images = 'lazy'
            endif
          %}
          <div class="collapsible-tabs__media{% if section.settings.media_size == 'large' %} column-merge{% endif %}">
            <div class="collapsible-tabs__media-wrapper aspect-ratio"{% if settings.disable_right_click %} oncontextmenu="return false"{% endif %}>
              {% style %}
              {% if settings.images_loading != 'disable' and section.settings.media_ratio == 'auto' %}
                #shopify-section-{{ section.id }} .lazy-image {
                  aspect-ratio: var(--asp-rat);
                }
              {% endif %}
              {% endstyle %}
              {%- liquid
                assign widths = '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200'
                assign img_class = "collapsible-tabs__image"
              -%}
                {%- capture sizes -%}
                      {% if disable_max_width %}
                        (max-width: 768px) 100vw, (max-width: 4000px) {{ max_width | times: media_size }}vw, {{ max_width | times: media_size }}vw
                      {% else %}
                        (max-width: 768px) 100vw, (max-width: {{ max_width }}) {{ max_width | times: media_size }}px, {{ max_width | times: media_size }}px
                      {% endif %}
                {%- endcapture -%}
                {% if settings.images_loading != 'disable' %}
                  <figure class="lazy-image lazy-image--{{ settings.images_loading }}" style="--asp-rat: {{ section.settings.image.aspect_ratio }};">
                 {% endif %}
                {{
                  section.settings.image
                  | image_url: width: 3200
                  | image_tag:
                    sizes: sizes,
                    widths: widths,
                    class: img_class,
                    alt: section.settings.image.alt,
                    draggable: false,
                    loading: loading_images,
                    onload: onload_script
                }}
                {% if settings.images_loading != 'disable' %}
                  {% if settings.images_loading != 'fade_scale' %}
                  <div class="lazy-image__preloader lazy-image__preloader-{{ settings.images_loading }}" aria-hidden="true">
                    <img 
                    alt="{{ section.settings.image.alt | escape }}" 
                    src="{{ section.settings.image | image_url: width: 10 }}"
                    draggable="false"
                    width="10" 
                    height="10">
                  </div>
                  {% endif %}
              </figure>
              {% endif %}
            </div>
          </div>
        {% endif %}
      </div>
      {% endif %}
      {% if section.settings.button_label != blank or section.settings.button_icon != blank %}<{% if section.settings.button_link != blank %}a href="{{ section.settings.button_link }}"{% if section.settings.target_blank %} target="_blank"{% endif %}{% else %}span disabled{% endif %} class="collapsible-tabs__button button {{ section.settings.button_style }}-button body-font button--secondary{% if settings.use_heading_font_secondary_buttons %} heading-font-style{% endif %}{% if settings.uppercase_secondary_buttons %} uppercase{% endif %}
      {% if section.settings.button_label != blank and section.settings.button_icon != blank %} button-block--small-padding{% endif %}{% if section.settings.button_icon != blank %} button-with-icon{% if section.settings.swap_button_icon %} icon--swap{% endif %}{% endif %}">
        {% if section.settings.button_icon != blank %}
          {%- liquid
            assign icon_name = section.settings.button_icon | split: '/'
            if icon_name.size == 3
                assign file_name = icon_name.first | append: '_' | append: icon_name[1]
            elsif icon_name.size == 2
                assign file_name = icon_name.first
            endif
            assign icon = icon_name.last
          -%}
          <span class="icon-accordion flex--row icon--small">{% render 'catalog-icons', file_name: file_name, icon: icon %}</span>
        {% endif %}
        {% if settings.bolder_secondary_buttons_font %}<b>{% endif %}{{ section.settings.button_label }}{% if settings.bolder_secondary_buttons_font %}</b>{% endif %}
      </{% if section.settings.button_link != blank %}a{% else %}span{% endif %}>{% endif %}
    {% if section_framing %}</div></div>{% endif %}
  </div>
</div>
{% endif %}

{% schema %}
{
  "name": "t:sections.collapsible_tabs.name",
  "tag": "section",
  "class": "section-collapsible-tabs",
  "settings": [
    {
      "type": "text",
      "id": "subheading",
      "default": "Subheading",
      "label": "t:sections.all.settings_titles.subheading.subheading.label"
    },
    {
      "type": "select",
      "id": "subheading_style",
      "options": [
        {
          "value": "caption-font",
          "label": "t:sections.all.headings_style.options__6.label"
        },
        {
          "value": "body-font",
          "label": "t:sections.all.headings_style.options__1.label"
        },
        {
          "value": "subheading-font",
          "label": "t:sections.all.headings_style.options__2.label"
        },
        {
          "value": "secondary-heading",
          "label": "t:sections.all.headings_style.options__3.label"
        },
        {
          "value": "section-heading",
          "label": "t:sections.all.headings_style.options__4.label"
        }
      ],
      "default": "subheading-font",
      "label": "t:sections.all.headings_style.subheading_style.label"
    },
    {
      "type": "select",
      "id": "subheading_tag",
      "options": [
        {
            "value": "h1",
            "label": "t:sections.all.tag.options__1.label"
        },
        {
            "value": "h2",
            "label": "t:sections.all.tag.options__2.label"
        },
        {
            "value": "h3",
            "label": "t:sections.all.tag.options__3.label"
        },
        {
            "value": "h4",
            "label": "t:sections.all.tag.options__4.label"
        },
        {
            "value": "h5",
            "label": "t:sections.all.tag.options__5.label"
        },
        {
            "value": "h6",
            "label": "t:sections.all.tag.options__6.label"
        },
        {
            "value": "div",
            "label": "t:sections.all.tag.options__7.label"
        },
        {
            "value": "span",
            "label": "t:sections.all.tag.options__8.label"
        }, 
        {
            "value": "p",
            "label": "t:sections.all.tag.options__9.label"
        }
        ],
        "default": "h3",
        "label": "t:sections.all.tag.subheading_tag.label"
    },
    {
      "type": "text",
      "id": "heading",
      "default": "Collapsible tabs",
      "label": "t:sections.all.settings_titles.heading.heading.label",
      "info": "t:sections.all.settings_titles.heading.heading.info"
    },
    {
      "type": "select",
      "id": "heading_style",
      "options": [
        {
          "value": "caption-font",
          "label": "t:sections.all.headings_style.options__6.label"
        },
        {
          "value": "body-font",
          "label": "t:sections.all.headings_style.options__1.label"
        },
        {
          "value": "subheading-font",
          "label": "t:sections.all.headings_style.options__2.label"
        },
        {
          "value": "secondary-heading",
          "label": "t:sections.all.headings_style.options__3.label"
        },
        {
          "value": "section-heading",
          "label": "t:sections.all.headings_style.options__4.label"
        },
        {
          "value": "page-title",
          "label": "t:sections.all.headings_style.options__5.label"
        }
      ],
      "default": "section-heading",
      "label": "t:sections.all.headings_style.heading_style.label"
    },
    {
      "type": "select",
      "id": "heading_tag",
      "options": [
        {
            "value": "h1",
            "label": "t:sections.all.tag.options__1.label"
        },
        {
            "value": "h2",
            "label": "t:sections.all.tag.options__2.label"
        },
        {
            "value": "h3",
            "label": "t:sections.all.tag.options__3.label"
        },
        {
            "value": "h4",
            "label": "t:sections.all.tag.options__4.label"
        },
        {
            "value": "h5",
            "label": "t:sections.all.tag.options__5.label"
        },
        {
            "value": "h6",
            "label": "t:sections.all.tag.options__6.label"
        },
        {
            "value": "div",
            "label": "t:sections.all.tag.options__7.label"
        },
        {
            "value": "span",
            "label": "t:sections.all.tag.options__8.label"
        }, 
        {
            "value": "p",
            "label": "t:sections.all.tag.options__9.label"
        }
        ],
        "default": "h2",
        "label": "t:sections.all.tag.heading_tag.label"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "t:sections.all.settings_titles.text.text.label"
    },
    {
      "type": "select",
      "id": "text_style",
      "options": [
        {
          "value": "caption-font",
          "label": "t:sections.all.headings_style.options__6.label"
        },
        {
          "value": "body-font",
          "label": "t:sections.all.headings_style.options__1.label"
        },
        {
          "value": "subheading-font",
          "label": "t:sections.all.headings_style.options__2.label"
        },
        {
          "value": "secondary-heading",
          "label": "t:sections.all.headings_style.options__3.label"
        },
        {
          "value": "section-heading",
          "label": "t:sections.all.headings_style.options__4.label"
        }
      ],
      "default": "body-font",
      "label": "t:sections.all.headings_style.text_style.label"
    },
    {
      "type": "checkbox",
      "id": "center_text",
      "default": false,
      "label": "t:sections.all.alignment.center_text.label"
    },
    {
      "type": "text",
      "id": "button_label",
      "default": "View all",
      "label": "t:sections.all.buttons.button_label.label"
    },
    {
      "type": "text",
      "id": "button_icon",
      "label": "t:sections.all.buttons.button_icon.label",
      "info": "t:sections.all.icons.icon.info"
    },
    {
      "type": "checkbox",
      "id": "swap_button_icon",
      "default": false,
      "label": "t:sections.all.icons.swap_icon_position.label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:sections.all.buttons.button_link.label"
    },
    {
      "type": "checkbox",
      "id": "target_blank",
      "default": false,
      "label": "t:sections.all.link.target_blank.label"
    },
    {
      "type": "select",
      "id": "button_style",
      "options": [
        {
          "value": "solid",
          "label": "t:sections.all.buttons.button_styles.options__1.label"
        },
        {
          "value": "outlined",
          "label": "t:sections.all.buttons.button_styles.options__2.label"
        },
        {
          "value": "link",
          "label": "t:sections.all.buttons.button_styles.options__3.label"
        }
      ],
      "default": "solid",
      "label": "t:sections.all.buttons.button_styles.button_style.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.settings_titles.section_appearance.content"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.all.media.image.image.label"
    },
    {
      "type": "checkbox",
      "id": "swap_media_position",
      "default": false,
      "label": "t:sections.all.swap_position.swap_media_position.label"
    },
    {
      "type": "select",
      "id": "media_size",
      "label": "t:sections.all.media.media_size.label",
      "options": [
        {
          "value": "large",
          "label": "t:sections.all.media.media_size.options__1.label"
        },
        {
          "value": "half",
          "label": "t:sections.all.media.media_size.options__2.label"
        },
        {
          "value": "small",
          "label": "t:sections.all.media.media_size.options__3.label"
        }
      ],
      "default": "half"
    },
    {
      "type": "select",
      "id": "media_ratio",
      "options": [
        {
          "value": "auto",
          "label": "t:sections.all.media.media_ratio.options__1.label"
        },
        {
          "value": "1/1",
          "label": "t:sections.all.media.media_ratio.options__2.label"
        },
        {
          "value": "4/5",
          "label": "t:sections.all.media.media_ratio.options__3.label"
        },
        {
          "value": "2/3",
          "label": "t:sections.all.media.media_ratio.options__4.label"
        },
        {
          "value": "4/3",
          "label": "t:sections.all.media.media_ratio.options__5.label"
        },
        {
          "value": "3/2",
          "label": "t:sections.all.media.media_ratio.options__6.label"
        },
        {
          "value": "16/9",
          "label": "t:sections.all.media.media_ratio.options__7.label"
        },
        {
          "value": "4/1",
          "label": "t:sections.all.media.media_ratio.options__8.label"
        }
      ],
      "default": "auto",
      "label": "t:sections.all.media.media_ratio.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.settings_titles.section_layout_header.content"
    },
    {
      "type": "select",
      "id": "grid_style",
      "options": [
        {
          "value": "page",
          "label": "t:sections.all.grid_style.options__1.label"
        },
        {
          "value": "secondary",
          "label": "t:sections.all.grid_style.options__3.label"
        },
        {
          "value": "alternative",
          "label": "t:sections.all.grid_style.options__2.label"
        }
      ],
      "default": "alternative",
      "label": "t:sections.all.grid_style.label"
    },
    {
      "type": "checkbox",
      "id": "disable_max_width",
      "default": false,
      "label": "t:sections.all.disable_max_width.label"
    },
    {
      "type": "checkbox",
      "id": "show_bottom_line",
      "default": false,
      "label": "t:sections.all.show_bottom_line.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.colors.header.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.color_scheme.label",
      "default": "background-1"
    },
    {
      "type": "select",
      "id": "section_framing",
      "options": [
        {
          "value": "disable",
          "label": "t:sections.all.section_framing.options__1.label"
        },
        {
          "value": "enable",
          "label": "t:sections.all.section_framing.options__2.label"
        },
        {
          "value": "grid",
          "label": "t:sections.all.section_framing.options__3.label"
        }
      ],
      "default": "disable",
      "label": "t:sections.all.section_framing.label",
      "info": "t:sections.all.section_framing.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing.header.content"
    },
    {
      "type": "range",
      "id": "top_spacing",
      "min": 0,
      "max": 2,
      "step": 0.1,
      "unit": "x",
      "label": "t:sections.all.spacing.top_spacing.label",
      "default": 1
    },
    {
      "type": "range",
      "id": "bottom_spacing",
      "min": 0,
      "max": 2,
      "step": 0.1,
      "unit": "x",
      "label": "t:sections.all.spacing.bottom_spacing.label",
      "default": 1
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "t:blocks.tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Collapsible tab",
          "label": "t:sections.all.settings_titles.heading.heading.label",
          "info": "t:sections.all.settings_titles.heading.heading.info"
        },
        {
          "type": "select",
          "id": "heading_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            }
          ],
          "default": "subheading-font",
          "label": "t:sections.all.headings_style.heading_style.label"
        },
        {
          "type": "checkbox",
          "id": "uppercase",
          "default": false,
          "label": "t:settings_schema.typography.settings.uppercase.label"
        },
        {
          "type": "checkbox",
          "id": "bolder_font",
          "default": false,
          "label": "t:settings_schema.typography.settings.bolder_font.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Collapsible tab content.</p>",
          "label": "t:sections.all.settings_titles.text.text.label"
        },
        {
          "type": "select",
          "id": "richtext_heading_style",
          "options": [
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            },
            {
              "value": "page-title",
              "label": "t:sections.all.headings_style.options__5.label"
            }
          ],
          "default": "section-heading",
          "label": "t:sections.all.headings_style.richtext_heading_style.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            }
          ],
          "default": "body-font",
          "label": "t:sections.all.headings_style.text_style.label"
        },
        {
          "type": "text",
          "id": "icon",
          "label": "t:sections.all.icons.icon.label",
          "info": "t:sections.all.icons.icon.info"
        },
        {
          "type": "color",
          "id": "color",
          "label": "t:blocks.icon.settings.color.label",
          "info": "t:blocks.icon.settings.color.info",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "mobile_color",
          "label": "t:blocks.icon.settings.mobile_color.label",
          "info": "t:blocks.icon.settings.color.info",
          "default": "#000000"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.all.settings_titles.page.page.label",
          "info": "t:sections.all.settings_titles.page.page.info"
        },
        {
          "type": "select",
          "id": "rte_heading_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            },
            {
              "value": "page-title",
              "label": "t:sections.all.headings_style.options__5.label"
            }
          ],
          "default": "section-heading",
          "label": "t:sections.all.headings_style.richtext_heading_style.label"
        },
        {
          "type": "select",
          "id": "page_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            }
          ],
          "default": "body-font",
          "label": "t:sections.all.headings_style.text_style.label"
        }
      ]
    },
    {
      "type": "topic",
      "name": "t:sections.collapsible_tabs.blocks.topic.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "Topic",
          "label": "t:sections.all.settings_titles.heading.heading.label",
          "info": "t:sections.all.settings_titles.heading.heading.info"
        },
        {
          "type": "select",
          "id": "heading_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            },
            {
              "value": "page-title",
              "label": "t:sections.all.headings_style.options__5.label"
            }
          ],
          "default": "subheading-font",
          "label": "t:sections.all.headings_style.heading_style.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Optional description of the group of questions.</p>",
          "label": "t:sections.all.settings_titles.text.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            }
          ],
          "default": "body-font",
          "label": "t:sections.all.headings_style.text_style.label"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "t:sections.all.buttons.button_label.label"
        },
        {
          "type": "text",
          "id": "button_icon",
          "label": "t:sections.all.buttons.button_icon.label",
          "info": "t:sections.all.icons.icon.info"
        },
        {
          "type": "checkbox",
          "id": "swap_button_icon",
          "default": false,
          "label": "t:sections.all.icons.swap_icon_position.label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.all.buttons.button_link.label"
        },
        {
          "type": "checkbox",
          "id": "target_blank",
          "default": false,
          "label": "t:sections.all.link.target_blank.label"
        },
        {
          "type": "select",
          "id": "button_style",
          "options": [
            {
              "value": "solid",
              "label": "t:sections.all.buttons.button_styles.options__1.label"
            },
            {
              "value": "outlined",
              "label": "t:sections.all.buttons.button_styles.options__2.label"
            },
            {
              "value": "link",
              "label": "t:sections.all.buttons.button_styles.options__3.label"
            }
          ],
          "default": "solid",
          "label": "t:sections.all.buttons.button_styles.button_style.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.collapsible_tabs.name",
      "blocks": [
        {
          "type": "topic"
        },
        {
          "type": "tab"
        },
        {
          "type": "tab"
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": [
      "*"
    ]
  }
}
{% endschema %}