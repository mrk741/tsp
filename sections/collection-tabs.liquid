{% if section.blocks.size > 0 %}
  {{ 'section-tabs.css' | asset_url | stylesheet_tag }}
  
  {%- liquid
      assign disable_max_width = false
      if section.settings.disable_max_width 
        assign disable_max_width = true
      elsif section.settings.grid_style == 'page' and settings.full_width_page_grid
        assign disable_max_width = true
      elsif section.settings.grid_style == 'alternative' and settings.full_width_alt_grid
        assign disable_max_width = true
      elsif section.settings.grid_style == 'secondary' and settings.full_width_second_grid
        assign disable_max_width = true
      endif

      assign max_width = '100vw'
    if disable_max_width == false and section.settings.grid_style == 'page'
        assign max_width = settings.page_width | append: 'px'
    elsif disable_max_width == false and section.settings.grid_style == 'alternative'
        assign max_width = settings.alt_grid_width | append: 'px'
    elsif disable_max_width == false and section.settings.grid_style == 'secondary'
        assign max_width = settings.second_grid_width | append: 'px'
    endif

    assign full_width = false
    if section.settings.full_width
      assign max_width = '100vw'
      assign full_width = true
    endif

      assign desktop_item_width = section.settings.desktop_item_width | times: 1
        assign desktop_item_size = desktop_item_width | floor

        assign mobile_item_size = 100.00 | divided_by: section.settings.mobile_item_min_width

        assign accent_price = false
        if settings.bolder_product_price and section.settings.card_content_style == 'regular'
            assign accent_price = true
        endif
        if settings.small_bolder_product_price and section.settings.card_content_style == 'small'
            assign accent_price = true
        endif
        assign use_accent_color_for_price = false
        if settings.use_accent_color_for_price and section.settings.card_content_style == 'regular'
            assign use_accent_color_for_price = true
        elsif settings.small_use_accent_color_for_price and section.settings.card_content_style == 'small'
            assign use_accent_color_for_price = true
        endif
        assign compare_at_price_color = 'sale'
        if section.settings.card_content_style == 'regular'
          assign compare_at_price_color = settings.compare_at_price_color
        elsif section.settings.card_content_style == 'small'
          assign compare_at_price_color = settings.small_compare_at_price_color
        endif
  -%}
  
  {% style %}
      #shopify-section-{{ section.id }} {
          --top-spacing: {{ section.settings.top_spacing }};
          --bottom-spacing: {{ section.settings.bottom_spacing }};
          --variant-swatches-radius: {{ settings.variant_swatches_radius }};
          --variant-thumbnail-aspect-ratio: {{ settings.variant_thumbnail_image_ratio }};
          --variant-thumbnail-focal-point: {{ settings.variant_thumbnail_focal_point }};
          --variant-thumbnail-radius: {{ settings.variant_thumbnail_radius }};
          {% if section.settings.grid_type == 'slider' %}
                --reduce-items: 1;
                {% if section.settings.grid_style == 'page' %}
                --desktop-item-width: calc((100% - ({{ settings.page_column_gap }}px * ({{ desktop_item_size }} - var(--reduce-items)))) / ({{ desktop_item_width }} - (var(--reduce-items) - 1)));
                {% elsif section.settings.grid_style == 'alternative' %}
                --desktop-item-width: calc((100% - ({{ settings.alt_grid_column_gap }}px * ({{ desktop_item_size }} - var(--reduce-items)))) / ({{ desktop_item_width }} - (var(--reduce-items) - 1)));
                {% elsif section.settings.grid_style == 'secondary' %}
                --desktop-item-width: calc((100% - ({{ settings.second_grid_column_gap }}px * ({{ desktop_item_size }} - var(--reduce-items)))) / ({{ desktop_item_width }} - (var(--reduce-items) - 1)));
                {% endif %}
                {% if section.settings.disable_grid_gaps %}
                --desktop-item-width: calc(100% / ({{ desktop_item_width }} - (var(--reduce-items) - 1)));
                {% endif %}
        {% endif %}
      }
      #shopify-section-{{ section.id }} {
            --aspect-ratio: {{ settings.product_media_ratio }};
            --focal-point: {{ settings.product_focal_point }};
        }
        #shopify-section-{{ section.id }} .grid.page-grid-gaps {
           grid-template-columns: repeat(var(--grid-columns), calc((100% - (var(--page-column-gap) * (var(--grid-columns) - 1))) / var(--grid-columns)));
        }
        #shopify-section-{{ section.id }} .page-grid .grid:not(.page-grid-gaps) {
            grid-template-columns: repeat(var(--grid-columns), calc(100% / var(--grid-columns)));
        }
        #shopify-section-{{ section.id }} .grid.alternative-grid-gaps {
            grid-template-columns: repeat(var(--grid-columns), calc((100% - (var(--alt-column-gap) * (var(--grid-columns) - 1))) / var(--grid-columns)));
        }
        #shopify-section-{{ section.id }} .alternative-grid .grid:not(.alternative-grid-gaps) {
            grid-template-columns: repeat(var(--grid-columns), calc(100% / var(--grid-columns)));
        }
        #shopify-section-{{ section.id }} .grid.secondary-grid-gaps {
            grid-template-columns: repeat(var(--grid-columns), calc((100% - (var(--second-column-gap) * (var(--grid-columns) - 1))) / var(--grid-columns)));
        }
        #shopify-section-{{ section.id }} .secondary-grid .grid:not(.secondary-grid-gaps) {
            grid-template-columns: repeat(var(--grid-columns), calc(100% / var(--grid-columns)));
        }
      @media screen and (max-width: 1300px) {
            #shopify-section-{{ section.id }} {
            {% if desktop_item_size == 6 %}
                --reduce-items: 2;
            {% endif %}
            }
            {% if desktop_item_size == 6 and section.settings.products_to_show >= 5 %}
            #shopify-section-{{ section.id }} .slider__grid--center {
                justify-content: flex-start;
            }
            {% endif %}
        }
        @media screen and (max-width: 1100px) {
            #shopify-section-{{ section.id }} {
            {% if desktop_item_size == 6 %}
                --reduce-items: 3;
            {% elsif desktop_item_size == 5 %}
                --reduce-items: 2;
            {% endif %}
            }
            {% if desktop_item_size == 6 and section.settings.products_to_show >= 4 %}
            #shopify-section-{{ section.id }} .slider__grid--center {
                justify-content: flex-start;
            }
            {% endif %}
            {% if desktop_item_size == 5 and section.settings.products_to_show >= 4 %}
            #shopify-section-{{ section.id }} .slider__grid--center {
                justify-content: flex-start;
            }
            {% endif %}
        }
        @media screen and (max-width: 1024px) {
            #shopify-section-{{ section.id }} {
            --desktop-item-width: {{ section.settings.mobile_item_min_width }}px;
            }
            #shopify-section-{{ section.id }} .slider__grid--center {
            justify-content: flex-start;
            }
        }
        @media screen and (max-width: 768px) {
            #shopify-section-{{ section.id }} {
                --grid-columns: {{ section.settings.mobile_columns }};
            }
        }
  {% endstyle %}
  
  <div class="section{% if section.settings.section_framing == 'disable' or section.settings.full_width %} color-{{ section.settings.color_scheme }}{% endif %}{% unless section.settings.full_width %} side-margins{% endunless %}{% if section.settings.show_bottom_line %} bottom-line{% endif %}">
      <div class="section-tabs tabs tabs-container-js section-container{% if section.settings.full_width == false %}{% if section.settings.section_framing == 'grid' %} {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endif %}{% unless section.settings.section_framing != 'disable' %} {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endunless %}{% endif %}">
        {% if section.settings.section_framing != 'disable' and section.settings.full_width == false %}<div class="section-radius elem-padding-l color-{{ section.settings.color_scheme }}"><div {% if section.settings.section_framing != 'grid' %}class="{{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}"{% endif %}>{% endif %}
          <div class="{% if section.settings.full_width %}side-margins{% endif %}">
            <div class="section-header{% if section.settings.center_text %} center{% endif %}{% if section.settings.full_width %} {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endif %}">
                {%- if section.settings.subheading != blank -%}
                  {%- liquid
                    assign uppercase_subheading = false
                    if section.settings.subheading_style == 'section-heading' and settings.uppercase_section_headings
                        assign uppercase_subheading = true
                    elsif section.settings.subheading_style == 'secondary-heading' and settings.uppercase_secondary_headings
                        assign uppercase_subheading = true
                    elsif section.settings.subheading_style == 'subheading-font' and settings.uppercase_subheadings
                        assign uppercase_subheading = true
                    elsif section.settings.subheading_style == 'body-font' and settings.uppercase_body
                        assign uppercase_subheading = true
                    elsif section.settings.subheading_style == 'caption-font' and settings.uppercase_caption
                        assign uppercase_subheading = true
                    endif
                  -%}
                  <{{ section.settings.subheading_tag }} class="{{ section.settings.subheading_style }}{% if uppercase_subheading %} uppercase{% endif %} 
                    {% if section.settings.subheading_style == 'subheading-font' %}{% if settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}{% endif %}">
                    {% if section.settings.subheading_style == 'subheading-font' and settings.bolder_subheadings_font %}<b>{% endif %}
                      {{ section.settings.subheading }}
                    {% if section.settings.subheading_style == 'subheading-font' and settings.bolder_subheadings_font %}</b>{% endif %}
                  </{{ section.settings.subheading_tag }}>
              {%- endif -%}
                {%- if section.settings.heading != blank -%}
                  {%- liquid
                    assign uppercase_heading = false
                    if section.settings.heading_style == 'secondary-heading' and settings.uppercase_secondary_headings
                        assign uppercase_heading = true
                    elsif section.settings.heading_style == 'section-heading' and settings.uppercase_section_headings
                        assign uppercase_heading = true
                    elsif section.settings.heading_style == 'page-title' and settings.uppercase_page_titles
                        assign uppercase_heading = true
                    elsif section.settings.heading_style == 'subheading-font' and settings.uppercase_subheadings
                        assign uppercase_heading = true
                    elsif section.settings.heading_style == 'body-font' and settings.uppercase_body
                        assign uppercase_heading = true
                    elsif section.settings.heading_style == 'caption-font' and settings.uppercase_caption
                        assign uppercase_heading = true
                    endif

                    assign heading_text = section.settings.heading
                    assign processed_text = ''
                    assign split_text = heading_text | split: '['

                    for part in split_text
                      if part contains ']'
                        assign split_bracket = part | split: ']'
                        assign highlight_text = split_bracket[0]
                        assign after_bracket = split_bracket[1]
                        assign processed_text = processed_text | append: '<span class="highlight"><span>' | append: highlight_text | append: '</span></span>' | append: after_bracket
                      else
                        assign processed_text = processed_text | append: part
                      endif
                    endfor

                    
                    assign final_text = ''
                    assign split_text_curly = processed_text | split: '{'

                    for part in split_text_curly
                      if part contains '}'
                        assign split_curly = part | split: '}'
                        assign styled_text = split_curly[0]
                        assign after_curly = split_curly[1]
                        assign final_text = final_text | append: '<span class="styled">' | append: styled_text | append: '</span>' | append: after_curly
                      else
                        assign final_text = final_text | append: part
                      endif
                    endfor
                  -%}
                  <{{ section.settings.heading_tag }} class="custom-heading {{ section.settings.heading_style }}{% if uppercase_heading %} uppercase{% endif %}{% if section.settings.heading_style == 'subheading-font' and settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}">
                    {% if section.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}<b>{% endif %}{{ final_text }}{% if section.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}</b>{% endif %}
                  </{{ section.settings.heading_tag }}>
                {%- endif -%}
                <div class="component-tabs hide-scrollbar">
                    <component-tabs class="component-tabs__wrapper">
                        {%- for block in section.blocks -%}
                          {% liquid
                              assign heading_text = block.settings.custom_heading
                              assign processed_text = ''
                              assign split_text = heading_text | split: '['

                              for part in split_text
                                if part contains ']'
                                  assign split_bracket = part | split: ']'
                                  assign highlight_text = split_bracket[0] | strip
                                  assign after_bracket = split_bracket[1] | strip
                                  assign has_before = false
                                  assign has_after = false
                                  if processed_text != ''
                                    assign has_before = true
                                  endif
                                  if after_bracket != ''
                                    assign has_after = true
                                  endif
                                  if has_before and has_after
                                    assign processed_text = processed_text  | strip | append: '&nbsp;<span class="highlight"><span>' | append: highlight_text | append: '</span></span>&nbsp;' | append: after_bracket
                                  elsif has_before
                                    assign processed_text = processed_text  | strip | append: '&nbsp;<span class="highlight"><span>' | append: highlight_text | append: '</span></span>' | append: after_bracket
                                  elsif has_after
                                    assign processed_text = processed_text  | strip | append: '<span class="highlight"><span>' | append: highlight_text | append: '</span></span>&nbsp;' | append: after_bracket
                                  else
                                    assign processed_text = processed_text  | strip | append: '<span class="highlight"><span>' | append: highlight_text | append: '</span></span>' | append: after_bracket
                                  endif
                                else
                                  assign processed_text = processed_text | append: part
                                endif
                              endfor

                              
                              assign final_text = ''
                              assign split_text_curly = processed_text | split: '{'

                              for part in split_text_curly
                                if part contains '}'
                                  assign split_curly = part | split: '}'
                                  assign styled_text = split_curly[0] | strip
                                  assign after_curly = split_curly[1] | strip
                                  assign has_before = false
                                  assign has_after = false
                                  if final_text != ''
                                    assign has_before = true
                                  endif
                                  if after_curly != ''
                                    assign has_after = true
                                  endif
                                  if has_before and has_after
                                    assign final_text = final_text | strip | append: '&nbsp;<span class="styled">' | append: styled_text | append: '</span>&nbsp;' | append: after_curly
                                  elsif has_before
                                    assign final_text = final_text | strip | append: '&nbsp;<span class="styled">' | append: styled_text | append: '</span>' | append: after_curly
                                  elsif has_after
                                    assign final_text = final_text | strip | append: '<span class="styled">' | append: styled_text | append: '</span>&nbsp;' | append: after_curly
                                  else
                                    assign final_text = final_text | strip | append: '<span class="styled">' | append: styled_text | append: '</span>' | append: after_curly
                                  endif
                                else
                                  assign final_text = final_text | append: part
                                endif
                              endfor
                          %}
                          <button {{ block.shopify_attributes }} id="{{ block.id }}" class="component-tabs__tab{% if forloop.first %} active{% endif %} tab-js custom-heading 
                          {{ section.settings.tabs_style }}{% if section.settings.tabs_uppercase %} uppercase{% endif %}{% if section.settings.tabs_style == 'subheading-font' and settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}">
                            {% if section.settings.tabs_bolder_font %}<b>{% endif %}
                              {% if block.settings.custom_heading != blank %}{{ final_text }}{% else %}{% if block.settings.collection != blank %}{{ block.settings.collection.title | escape }}{% else %}{{ 'collection.collection_title_placeholder' | t }}{% endif %}{% endif %}
                              {% if section.settings.tabs_bolder_font %}</b>{% endif %}
                          </button>
                        {%- endfor -%}
                    </component-tabs>
                </div>
            </div>
          </div>
          <div class="section-tabs__content-wrapper">
              {%- for block in section.blocks -%}
                {% liquid 
                    if section.settings.desktop_columns == '3'
                        if block.settings.collection.products.count > 2
                            assign columns = section.settings.desktop_columns
                        else
                            assign columns = '2'
                        endif
                    elsif section.settings.desktop_columns == '4'
                        if block.settings.collection.products.count > 3
                            assign columns = section.settings.desktop_columns
                        elsif block.settings.collection.products.count == 3
                            assign columns = '3'
                        else 
                            assign columns = '2'
                        endif
                    elsif section.settings.desktop_columns == '5'
                        if block.settings.collection.products.count > 4
                            assign columns = section.settings.desktop_columns
                        elsif block.settings.collection.products.count == 4
                            assign columns = '4'
                        elsif block.settings.collection.products.count == 3
                            assign columns = '3'
                        else 
                            assign columns = '2'
                        endif
                    else 
                    assign columns = section.settings.desktop_columns
                    endif
                    if block.settings.collection == blank
                        assign columns = section.settings.desktop_columns
                    endif

                    assign selector_container = '#content-' | append: block.id
                %}
                  <div {{ block.shopify_attributes }} id="content-{{ block.id }}" class="component-tabs__content tab-content-js{% if forloop.first %} active{% endif %}">
                    {% if section.settings.grid_type == 'grid' %}
                        {% style %}
                            #shopify-section-{{ section.id }} .product__grid-container--{{ block.id }} {
                                --grid-columns: {{ columns }};
                            }
                            @media screen and (max-width: 1200px) {
                              #shopify-section-{{ section.id }} .product__grid-container--{{ block.id }} {
                                --grid-columns: {% if columns == '5' %}4{% else %}{{ columns }}{% endif %};
                              }
                            }
                            @media screen and (max-width: 1024px) {
                              #shopify-section-{{ section.id }} .product__grid-container--{{ block.id }} {
                                --grid-columns: {% if columns == '5' or columns == '4' %}3{% else %}{{ columns }}{% endif %};
                              }
                            }
                            @media screen and (max-width: 768px) {
                                #shopify-section-{{ section.id }} .product__grid-container--{{ block.id }} {
                                    --grid-columns: {{ section.settings.mobile_columns }};
                                }
                            }
                        {% endstyle %}
                        <div id="ProductGridContainer--{{  block.id }}" class="product__grid-container product__grid-container--{{ block.id }}">
                            {% if block.settings.collection != blank %}
                              {%  for collection in collections %}
                                {% if collection.id == block.settings.collection.id %}
                                  {%- paginate block.settings.collection.products by section.settings.products_per_page -%}
                                      <div class="collection">
                                          <ul id="product-grid--{{ block.id }}" data-id="{{ block.id }}" class="grid {% unless section.settings.disable_grid_gaps %}{{ section.settings.grid_style }}-grid-gaps{% endunless %}{% unless full_width %} {{ section.settings.grid_style }}-grid{% endunless %}"> 
                                            {%- for product in block.settings.collection.products -%}
                                              {% assign lazy_load = 'eager' %}
                                              {%- if forloop.index > 2 -%}
                                              {%- assign lazy_load = 'lazy' -%}
                                              {%- endif -%}
                                              <li class="grid-item">
                                              {% render 'card-product',
                                                  card_product: product,
                                                  show_vendor: section.settings.show_vendor,
                                                  show_title: section.settings.show_title,
                                                  hover_behavior: section.settings.hover_behavior,
                                                  quick_buy: section.settings.quick_buy,
                                                  price_position: section.settings.price_position,
                                                  options_position: section.settings.options_position,
                                                  desktop_options: section.settings.desktop_options,
                                                  mobile_options: section.settings.mobile_options,
                                                  max_product_name_characters: section.settings.max_product_name_characters,
                                                  show_short_description: section.settings.show_short_description,
                                                  show_rating: section.settings.show_rating,
                                                  lazy_load: lazy_load,
                                                  max_width: max_width,
                                                  disable_max_width: disable_max_width,
                                                  accent_price: accent_price,
                                                  desktop_columns: section.settings.desktop_columns,
                                                  mobile_columns: section.settings.mobile_columns,
                                                  autoplay_speed: section.settings.autoplay_speed,
                                                  product_card_color_scheme: section.settings.product_card_color_scheme,
                                                  show_product_card_border: section.settings.show_product_card_border,
                                                  index: forloop.index,
                                                  complementary_block: false,
                                                  card_content_style: section.settings.card_content_style,
                                                  compare_at_price_color: compare_at_price_color, 
                                                  use_accent_color_for_price: use_accent_color_for_price,
                                                  parent_color_scheme: section.settings.color_scheme,
                                                  full_width: full_width,
                                                  selector_container: selector_container,
                                                  show_bullets: section.settings.show_bullets,
                                                  grid_type: section.settings.grid_type,
                                                  disable_grid_gaps: section.settings.disable_grid_gaps,
                                                  show_pickup_availability: section.settings.show_pickup_availability
                                              %}
                                              </li>
                                              {%- endfor -%}
                                          </ul>
                                          {%- if paginate.pages > 1 -%}
                                            {% if full_width %}<div class="side-margins"><div class="{{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}">{% endif %}
                                              {% render 'pagination', paginate: paginate, anchor: '', disable_max_width: disable_max_width, pagination_settings: section.settings, pagination_type: 'click', disable_pagination: true %}
                                              {% if full_width %}</div></div>{%endif %}
                                          {%- endif -%}
                                      </div>
                                  {%- endpaginate -%}
                                {% endif %}
                              {% endfor %}
                            {% else %}
                                <div class="collection">
                                    <ul id="product-grid--{{ section.id }}" data-id="{{ section.id }}" class="grid {% unless section.settings.disable_grid_gaps %}{{ section.settings.grid_style }}-grid-gaps{% endunless %} {% unless full_width %} {{ section.settings.grid_style }}-grid{% endunless %}">
                                        {% for item in (1..10) %}
                                            {%- assign placeholder_index =  forloop.index -%}
                                            {%- if forloop.index > 6 -%}
                                                {%- assign placeholder_index =  '6' -%}
                                            {%- endif -%}
                                            <li class="grid-item">
                                                {% render 'card-product-placeholder',
                                                    card_product: product,
                                                    show_vendor: section.settings.show_vendor,
                                                    show_title: section.settings.show_title,
                                                    hover_behavior: section.settings.hover_behavior,
                                                    quick_buy: section.settings.quick_buy,
                                                    price_position: section.settings.price_position,
                                                    options_position: section.settings.options_position,
                                                    desktop_options: section.settings.desktop_options,
                                                    mobile_options: section.settings.mobile_options,
                                                    max_product_name_characters: section.settings.max_product_name_characters,
                                                    show_short_description: section.settings.show_short_description,
                                                    show_rating: section.settings.show_rating,
                                                    lazy_load: lazy_load,
                                                    max_width: max_width,
                                                    disable_max_width: disable_max_width,
                                                    accent_price: accent_price,
                                                    desktop_columns: section.settings.desktop_columns,
                                                    mobile_columns: section.settings.mobile_columns,
                                                    autoplay_speed: section.settings.autoplay_speed,
                                                    product_card_color_scheme: section.settings.product_card_color_scheme,
                                                    show_product_card_border: section.settings.show_product_card_border,
                                                    complementary_block: false,
                                                    index_placeholder: placeholder_index,
                                                    card_content_style: section.settings.card_content_style,
                                                    compare_at_price_color: compare_at_price_color, 
                                                    use_accent_color_for_price: use_accent_color_for_price,
                                                    parent_color_scheme: section.settings.color_scheme,
                                                    full_width: full_width
                                                %}
                                            </li>
                                        {% endfor %}
                                    </ul>
                                </div>
                            {% endif %}
                        </div>
                    {% else %}
                    <slider-component id="GalleryViewer-{{ section.id }}" class="slider {{ section.settings.grid_style }}{% if section.settings.full_width %} slider--full-width{% endif %}">
                        <div class="slider__viewport">
                        {% liquid 
                          if block.settings.collection.products.count > section.settings.products_to_show
                            assign products_count = section.settings.products_to_show
                          else 
                            assign products_count = block.settings.collection.products.count
                          endif
                          if block.settings.collection == blank
                            if section.settings.products_to_show > 10
                              assign products_count = 10
                            else
                              assign products_count = section.settings.products_to_show
                            endif
                          endif
                          assign info_card_visible = false
                          if block.settings.info_card_heading != blank or block.settings.info_card_subheading != blank or block.settings.info_card_text != blank or block.settings.info_card_link != blank
                            assign info_card_visible = true
                          endif
                          if info_card_visible and block.settings.info_card_style != 'hide'
                            assign products_count = products_count | plus: 1
                          endif
                        %}
                        <ul id="Slider-Gallery-{{ section.id }}" class="slider__grid {% if section.settings.alignment_fewer_items == 'center' and desktop_item_width > products_count %}slider__grid--center{% endif %}
                            {% unless section.settings.disable_grid_gaps %}{{ section.settings.grid_style }}-grid-gaps{% endunless %} hide-scrollbar" role="list" 
                            style="--desktop-columns: {{ desktop_item_width }};--mobile-columns: {{ mobile_item_size }};"
                            data-count="{{ desktop_item_size }}"
                            data-mobile-width="{{ section.settings.mobile_item_min_width }}">
                            {% if block.settings.info_card_position == 'first' and block.settings.info_card_style != 'hide' and info_card_visible %}
                              <li id="Slide-{{ section.id }}" class="slider__grid-item is-active{% if block.settings.info_card_style == 'show_on_desktop' %} only-on-desktop{% endif %}">
                                {% render 'information-card', location: block, color_location: block, parent_color_scheme: section.settings.color_scheme, full_width: full_width, block_style: true %}
                              </li>
                            {% endif %}
                            {% if block.settings.collection != blank %}
                                {% for product in block.settings.collection.products limit: section.settings.products_to_show %}
                                    <li id="Slide-{{ section.id }}" class="slider__grid-item {% unless block.settings.info_card_position == 'first' and block.settings.info_card_style != 'hide' and info_card_visible %}{% if forloop.first %}is-active{% endif %}{% endunless %}">
                                            {% render 'card-product',
                                                card_product: product,
                                                show_vendor: section.settings.show_vendor,
                                                show_title: section.settings.show_title,
                                                hover_behavior: section.settings.hover_behavior,
                                                quick_buy: section.settings.quick_buy,
                                                price_position: section.settings.price_position,
                                                options_position: section.settings.options_position,
                                                desktop_options: section.settings.desktop_options,
                                                mobile_options: section.settings.mobile_options,
                                                max_product_name_characters: section.settings.max_product_name_characters,
                                                show_short_description: section.settings.show_short_description,
                                                show_rating: section.settings.show_rating,
                                                lazy_load: lazy_load,
                                                max_width: max_width,
                                                disable_max_width: disable_max_width,
                                                accent_price: accent_price,
                                                desktop_columns: desktop_item_width,
                                                mobile_width: section.settings.mobile_item_min_width,
                                                autoplay_speed: section.settings.autoplay_speed,
                                                product_card_color_scheme: section.settings.product_card_color_scheme,
                                                show_product_card_border: section.settings.show_product_card_border,
                                                index: forloop.index,
                                                complementary_block: false,
                                                card_content_style: section.settings.card_content_style,
                                                compare_at_price_color: compare_at_price_color, 
                                                use_accent_color_for_price: use_accent_color_for_price,
                                                parent_color_scheme: section.settings.color_scheme,
                                                full_width: full_width,
                                                selector_container: selector_container,
                                                show_bullets: section.settings.show_bullets,
                                                grid_type: section.settings.grid_type,
                                                grid_style: section.settings.grid_style,
                                                disable_grid_gaps: section.settings.disable_grid_gaps,
                                                show_pickup_availability: section.settings.show_pickup_availability
                                            %}
                                    </li>
                                {% endfor %}
                            {% else %}
                                {% for item in (1..10) limit: section.settings.products_to_show %}
                                    {%- assign placeholder_index =  forloop.index -%}
                                    {%- if forloop.index > 6 -%}
                                        {%- assign placeholder_index =  '6' -%}
                                    {%- endif -%}
                                    <li id="Slide-{{ section.id }}" class="slider__grid-item {% unless block.settings.info_card_position == 'first' and block.settings.info_card_style != 'hide' and info_card_visible %}{% if forloop.first %}is-active{% endif %}{% endunless %}">
                                        {% render 'card-product-placeholder',
                                            card_product: product,
                                            show_vendor: section.settings.show_vendor,
                                            show_title: section.settings.show_title,
                                            hover_behavior: section.settings.hover_behavior,
                                            quick_buy: section.settings.quick_buy,
                                            price_position: section.settings.price_position,
                                            options_position: section.settings.options_position,
                                            desktop_options: section.settings.desktop_options,
                                            mobile_options: section.settings.mobile_options,
                                            max_product_name_characters: section.settings.max_product_name_characters,
                                            show_short_description: section.settings.show_short_description,
                                            show_rating: section.settings.show_rating,
                                            lazy_load: lazy_load,
                                            max_width: max_width,
                                            disable_max_width: disable_max_width,
                                            accent_price: accent_price,
                                            desktop_columns: section.settings.desktop_columns,
                                            mobile_columns: section.settings.mobile_columns,
                                            autoplay_speed: section.settings.autoplay_speed,
                                            product_card_color_scheme: section.settings.product_card_color_scheme,
                                            show_product_card_border: section.settings.show_product_card_border,
                                            complementary_block: false,
                                            index_placeholder: placeholder_index,
                                            card_content_style: section.settings.card_content_style,
                                            compare_at_price_color: compare_at_price_color, 
                                            use_accent_color_for_price: use_accent_color_for_price,
                                            parent_color_scheme: section.settings.color_scheme,
                                            full_width: full_width
                                        %}
                                    </li>
                                {% endfor %}
                            {% endif %}
                            {% if block.settings.info_card_position == 'last' and block.settings.info_card_style != 'hide' and info_card_visible %}
                              <li id="Slide-{{ section.id }}" class="slider__grid-item{% if block.settings.info_card_style == 'show_on_desktop' %} only-on-desktop{% endif %}">
                                {% render 'information-card', location: block, color_location: block, parent_color_scheme: section.settings.color_scheme, full_width: full_width, block_style: true %}
                              </li>
                            {% endif %}
                        </ul>
                            <button type="button" class="slider-button slider-button--prev{% if section.settings.show_arrows %} slider-button-hover{% endif %} visually-hidden" name="previous" aria-label="{{ 'general.slider.previous_slide' | t }}">
                            <span class="icon icon--small">{%- render 'glyphs_arrows', icon: 'arrow-left' -%}</span>
                            </button>
                            <button type="button" class="slider-button slider-button--next{% if section.settings.show_arrows %} slider-button-hover{% endif %} visually-hidden" name="next" aria-label="{{ 'general.slider.next_slide' | t }}">
                            <span class="icon icon--small">{%- render 'glyphs_arrows', icon: 'arrow-right' -%}</span>
                            </button>
                            {% if section.settings.show_scrollbar %}
                              {% if section.settings.full_width %}<div class="side-margins">{% endif %}
                                <div role="scrollbar" aria-orientation="horizontal" aria-valuemax="100" aria-valuemin="0" aria-valuenow="39" class="slider-scrollbar visually-hidden{% if section.settings.full_width %} {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endif %}">
                                  <span class="slider-scrollbar__track">
                                    <span class="slider-scrollbar__thumb"></span>
                                  </span>
                                </div>
                              {% if section.settings.full_width %}</div>{% endif %}
                            {% endif %}
                        </div>
                    </slider-component>
                    {% endif %}
                  </div>
              {%- endfor -%}
          </div>
        {% if section.settings.section_framing != 'disable' and section.settings.full_width == false %}</div></div>{% endif %}
      </div>
  </div>
  {% endif %}

{% schema %}
{
  "name": "t:sections.collection-tabs.name",
  "tag": "section",
  "class": "collection-tabs section-collection-tabs",
  "max_blocks": 5,
  "settings": [
    {
      "type": "text",
      "id": "subheading",
      "label": "t:sections.all.settings_titles.subheading.subheading.label"
    },
    {
      "type": "select",
      "id": "subheading_style",
      "options": [
        {
          "value": "caption-font",
          "label": "t:sections.all.headings_style.options__6.label"
        },
        {
          "value": "body-font",
          "label": "t:sections.all.headings_style.options__1.label"
        },
        {
          "value": "subheading-font",
          "label": "t:sections.all.headings_style.options__2.label"
        },
        {
          "value": "secondary-heading",
          "label": "t:sections.all.headings_style.options__3.label"
        },
        {
          "value": "section-heading",
          "label": "t:sections.all.headings_style.options__4.label"
        }
      ],
      "default": "secondary-heading",
      "label": "t:sections.all.headings_style.subheading_style.label"
    },
    {
      "type": "select",
      "id": "subheading_tag",
      "options": [
        {
            "value": "h1",
            "label": "t:sections.all.tag.options__1.label"
        },
        {
            "value": "h2",
            "label": "t:sections.all.tag.options__2.label"
        },
        {
            "value": "h3",
            "label": "t:sections.all.tag.options__3.label"
        },
        {
            "value": "h4",
            "label": "t:sections.all.tag.options__4.label"
        },
        {
            "value": "h5",
            "label": "t:sections.all.tag.options__5.label"
        },
        {
            "value": "h6",
            "label": "t:sections.all.tag.options__6.label"
        },
        {
            "value": "div",
            "label": "t:sections.all.tag.options__7.label"
        },
        {
            "value": "span",
            "label": "t:sections.all.tag.options__8.label"
        }, 
        {
            "value": "p",
            "label": "t:sections.all.tag.options__9.label"
        }
        ],
        "default": "h3",
        "label": "t:sections.all.tag.subheading_tag.label"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "t:sections.all.settings_titles.heading.heading.label",
      "info": "t:sections.all.settings_titles.heading.heading.info"
    },
    {
      "type": "select",
      "id": "heading_style",
      "options": [
        {
          "value": "caption-font",
          "label": "t:sections.all.headings_style.options__6.label"
        },
        {
          "value": "body-font",
          "label": "t:sections.all.headings_style.options__1.label"
        },
        {
          "value": "subheading-font",
          "label": "t:sections.all.headings_style.options__2.label"
        },
        {
          "value": "secondary-heading",
          "label": "t:sections.all.headings_style.options__3.label"
        },
        {
          "value": "section-heading",
          "label": "t:sections.all.headings_style.options__4.label"
        },
        {
          "value": "page-title",
          "label": "t:sections.all.headings_style.options__5.label"
        }
      ],
      "default": "page-title",
      "label": "t:sections.all.headings_style.heading_style.label"
    },
    {
      "type": "select",
      "id": "heading_tag",
      "options": [
        {
            "value": "h1",
            "label": "t:sections.all.tag.options__1.label"
        },
        {
            "value": "h2",
            "label": "t:sections.all.tag.options__2.label"
        },
        {
            "value": "h3",
            "label": "t:sections.all.tag.options__3.label"
        },
        {
            "value": "h4",
            "label": "t:sections.all.tag.options__4.label"
        },
        {
            "value": "h5",
            "label": "t:sections.all.tag.options__5.label"
        },
        {
            "value": "h6",
            "label": "t:sections.all.tag.options__6.label"
        },
        {
            "value": "div",
            "label": "t:sections.all.tag.options__7.label"
        },
        {
            "value": "span",
            "label": "t:sections.all.tag.options__8.label"
        }, 
        {
            "value": "p",
            "label": "t:sections.all.tag.options__9.label"
        }
        ],
        "default": "h2",
        "label": "t:sections.all.tag.heading_tag.label"
    },
    {
      "type": "select",
      "id": "tabs_style",
      "options": [
        {
          "value": "caption-font",
          "label": "t:sections.all.headings_style.options__6.label"
        },
        {
          "value": "body-font",
          "label": "t:sections.all.headings_style.options__1.label"
        },
        {
          "value": "subheading-font",
          "label": "t:sections.all.headings_style.options__2.label"
        },
        {
          "value": "secondary-heading",
          "label": "t:sections.all.headings_style.options__3.label"
        },
        {
          "value": "section-heading",
          "label": "t:sections.all.headings_style.options__4.label"
        }
      ],
      "default": "secondary-heading",
      "label": "t:sections.all.headings_style.tabs_style.label"
    },
    {
      "type": "checkbox",
      "id": "tabs_uppercase",
      "default": false,
      "label": "t:settings_schema.typography.settings.uppercase.label"
    },
    {
        "type": "checkbox",
        "id": "tabs_bolder_font",
        "default": false,
        "label": "t:settings_schema.typography.settings.bolder_font.label"
    },
    {
      "type": "checkbox",
      "id": "center_text",
      "default": true,
      "label": "t:sections.all.alignment.center_text.label"
    },
    {
        "type": "select",
        "id": "grid_type",
        "options": [
          {
            "value": "grid",
            "label": "t:sections.all.products_style.options__1.label"
          },
          {
            "value": "slider",
            "label": "t:sections.all.products_style.options__2.label"
          }
        ],
        "default": "slider",
        "label": "t:sections.all.products_style.label"
    },
    {
        "type": "header",
        "content": "t:sections.featured-collections.settings.grid_header.content"
    },
    {
        "type": "range",
        "id": "products_per_page",
        "min": 3,
        "max": 48,
        "step": 1,
        "label": "t:sections.all.items_per_page.label",
        "default": 6
    },
    {
        "type": "select",
        "id": "desktop_columns",
        "options": [
          {
            "value": "2",
            "label": "t:sections.all.columns.options__2.label"
          },
          {
            "value": "3",
            "label": "t:sections.all.columns.options__3.label"
          },
          {
            "value": "4",
            "label": "t:sections.all.columns.options__4.label"
          },
          {
            "value": "5",
            "label": "t:sections.all.columns.options__5.label"
          }
        ],
        "default": "3",
        "label": "t:sections.all.columns.desktop_columns.label"
    },
    {
        "type": "select",
        "id": "mobile_columns",
        "options": [
          {
            "value": "1",
            "label": "t:sections.all.columns.options__1.label"
          },
          {
            "value": "2",
            "label": "t:sections.all.columns.options__2.label"
          }
        ],
        "default": "1",
        "label": "t:sections.all.columns.mobile_columns.label"
    },
    {
        "type": "text",
        "id": "pagination_button_label",
        "label": "t:sections.all.buttons.button_label.label",
        "default": "Load more"
    },
    {
      "type": "text",
      "id": "pagination_button_icon",
      "label": "t:sections.all.buttons.button_icon.label",
      "info": "t:sections.all.icons.icon.info"
    },
    {
      "type": "checkbox",
      "id": "swap_pagination_button_icon",
      "default": false,
      "label": "t:sections.all.icons.swap_icon_position.label"
    },
    {
        "type": "select",
        "id": "pagination_button_style",
        "options": [
          {
            "value": "solid",
            "label": "t:sections.all.buttons.button_styles.options__1.label"
          },
          {
            "value": "outlined",
            "label": "t:sections.all.buttons.button_styles.options__2.label"
          },
          {
            "value": "link",
            "label": "t:sections.all.buttons.button_styles.options__3.label"
          }
        ],
        "default": "solid",
        "label": "t:sections.all.buttons.button_styles.button_style.label"
    },
    {
        "type": "checkbox",
        "id": "use_main_button_pagination",
        "default": false,
        "label": "t:sections.all.buttons.use_main_button.label"
    },
    {
        "type": "header",
        "content": "t:sections.featured-collections.settings.slider_header.content"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 50,
      "step": 1,
      "label": "t:sections.all.slider.products_to_show.label",
      "default": 12
    },
    {
        "type": "range",
        "id": "desktop_item_width",
        "min": 2,
        "max": 6.5,
        "step": 0.5,
        "label": "t:sections.all.slider.desktop_item_width.label",
        "info": "t:sections.all.slider.desktop_item_width.info",
        "default": 6.5
    },
    {
        "type": "select",
        "id": "alignment_fewer_items",
        "options": [
          {
            "value": "center",
            "label": "t:sections.all.slider.alignment_fewer_items.options__1.label"
          },
          {
            "value": "left",
            "label": "t:sections.all.slider.alignment_fewer_items.options__2.label"
          }
        ],
        "default": "center",
        "label": "t:sections.all.slider.alignment_fewer_items.label"
    },
    {
        "type": "range",
        "id": "mobile_item_min_width",
        "min": 150,
        "max": 300,
        "step": 10,
        "unit": "px",
        "label": "t:sections.all.slider.mobile_item_min_width.label",
        "default": 170
    },
    {
        "type": "checkbox",
        "id": "show_arrows",
        "default": true,
        "label": "t:sections.all.slider.show_arrows.label"
    },
    {
        "type": "checkbox",
        "id": "show_scrollbar",
        "default": true,
        "label": "t:sections.all.slider.show_scrollbar.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.product_card.header.content"
    },
    {
        "type": "select",
        "id": "hover_behavior",
        "options": [
          {
            "value": "none",
            "label": "t:sections.all.product_card.hover_behavior.options__1.label"
          },
          {
            "value": "image_zoom",
            "label": "t:sections.all.product_card.hover_behavior.options__2.label"
          },
          {
            "value": "second_image",
            "label": "t:sections.all.product_card.hover_behavior.options__3.label"
          },
          {
            "value": "second_image_zoom",
            "label": "t:sections.all.product_card.hover_behavior.options__4.label"
          },
          {
            "value": "slider",
            "label": "t:sections.all.product_card.hover_behavior.options__5.label"
          },
          {
            "value": "autoplay_slider",
            "label": "t:sections.all.product_card.hover_behavior.options__6.label"
          }
        ],
        "default": "second_image_zoom",
        "label": "t:sections.all.product_card.hover_behavior.label"
    },
    {
      "type": "checkbox",
      "id": "show_bullets",
      "default": true,
      "label": "t:sections.all.slider.show_bullets.label"
    },
    {
        "type": "range",
        "id": "autoplay_speed",
        "min": 2,
        "max": 5,
        "step": 0.5,
        "unit": "s",
        "label": "t:sections.all.product_card.autoplay_speed.label",
        "default": 3
    },
    {
        "type": "select",
        "id": "desktop_options",
        "options": [
          {
            "value": "disable",
            "label": "t:sections.all.product_card.desktop_options.options__1.label"
          },
          {
            "value": "enable",
            "label": "t:sections.all.product_card.desktop_options.options__2.label"
          },
          {
            "value": "on_hover",
            "label": "t:sections.all.product_card.desktop_options.options__3.label"
          }
        ],
        "default": "on_hover",
        "label": "t:sections.all.product_card.desktop_options.label"
    },
    {
        "type": "select",
        "id": "mobile_options",
        "options": [
          {
            "value": "disable",
            "label": "t:sections.all.product_card.mobile_options.options__1.label"
          },
          {
            "value": "enable",
            "label": "t:sections.all.product_card.mobile_options.options__2.label"
          }
        ],
        "default": "enable",
        "label": "t:sections.all.product_card.mobile_options.label"
    },
    {
        "type": "select",
        "id": "card_content_style",
        "options": [
          {
            "value": "regular",
            "label": "t:sections.all.product_card.card_content_style.options__1.label"
          },
          {
            "value": "small",
            "label": "t:sections.all.product_card.card_content_style.options__2.label"
          }
        ],
        "default": "small",
        "label": "t:sections.all.product_card.card_content_style.label",
        "info": "t:sections.all.product_card.card_content_style.info"
    },
    {
        "type": "select",
        "id": "quick_buy",
        "options": [
          {
            "value": "disable",
            "label": "t:sections.all.product_card.quick_buy.options__1.label"
          },
          {
            "value": "on_desktop",
            "label": "t:sections.all.product_card.quick_buy.options__2.label"
          },
          {
            "value": "enable",
            "label": "t:sections.all.product_card.quick_buy.options__3.label"
          }
        ],
        "default": "enable",
        "label": "t:sections.all.product_card.quick_buy.label"
    },
    {
        "type": "select",
        "id": "price_position",
        "options": [
          {
            "value": "top",
            "label": "t:sections.all.product_card.price_position.options__1.label"
          },
          {
            "value": "bottom",
            "label": "t:sections.all.product_card.price_position.options__2.label"
          },
          {
            "value": "with_title",
            "label": "t:sections.all.product_card.price_position.options__3.label"
          }
        ],
        "default": "bottom",
        "label": "t:sections.all.product_card.price_position.label"
    },
    {
        "type": "select",
        "id": "options_position",
        "options": [
          {
            "value": "top",
            "label": "t:sections.all.product_card.options_position.options__1.label"
          },
          {
            "value": "bottom",
            "label": "t:sections.all.product_card.options_position.options__2.label"
          }
        ],
        "default": "bottom",
        "label": "t:sections.all.product_card.options_position.label"
    },
    {
        "type": "select",
        "id": "show_vendor",
        "options": [
          {
            "value": "disable",
            "label": "t:sections.all.product_card.show_vendor.options__1.label"
          },
          {
            "value": "text",
            "label": "t:sections.all.product_card.show_vendor.options__2.label"
          },
          {
            "value": "image",
            "label": "t:sections.all.product_card.show_vendor.options__3.label"
          }
        ],
        "default": "image",
        "label": "t:sections.all.product_card.show_vendor.label",
        "info": "t:sections.all.product_card.show_vendor.info"
    },
    {
        "type": "checkbox",
        "id": "show_title",
        "default": true,
        "label": "t:sections.all.product_card.show_title.label"
    },
    {
        "type": "number",
        "id": "max_product_name_characters",
        "label": "t:sections.all.product_card.max_product_name_characters.label",
        "default": 100
    },
    {
        "type": "checkbox",
        "id": "show_rating",
        "default": true,
        "label": "t:sections.all.product_card.show_rating.label",
        "info": "t:sections.all.product_card.show_rating.info"
    },
    {
        "type": "checkbox",
        "id": "show_short_description",
        "default": true,
        "label": "t:sections.all.product_card.show_short_description.label",
        "info": "t:sections.all.product_card.show_short_description.info"
    },
    {
      "type": "checkbox",
      "id": "show_pickup_availability",
      "default": false,
      "label": "t:sections.all.product_card.show_pickup_availability.label"
    },
    {
        "type": "checkbox",
        "id": "show_product_card_border",
        "default": false,
        "label": "t:sections.all.show_frame.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.settings_titles.section_layout_header.content"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "default": true,
      "label": "t:sections.all.full_width.label"
    },
    {
      "type": "select",
      "id": "grid_style",
      "options": [
        {
          "value": "page",
          "label": "t:sections.all.grid_style.options__1.label"
        },
        {
          "value": "secondary",
          "label": "t:sections.all.grid_style.options__3.label"
        },
        {
          "value": "alternative",
          "label": "t:sections.all.grid_style.options__2.label"
        }
      ],
      "default": "secondary",
      "label": "t:sections.all.grid_style.label"
    },
    {
      "type": "checkbox",
      "id": "disable_max_width",
      "default": false,
      "label": "t:sections.all.disable_max_width.label"
    },
    {
      "type": "checkbox",
      "id": "disable_grid_gaps",
      "default": false,
      "label": "t:sections.all.disable_grid_gaps.label"
    },
    {
      "type": "checkbox",
      "id": "show_bottom_line",
      "default": false,
      "label": "t:sections.all.show_bottom_line.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.colors.header.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.color_scheme.label",
      "default": "cheme-eec42577-a32b-44de-bbe9-54c84b66cfb4"
    },
    {
        "type": "color_scheme",
        "id": "product_card_color_scheme",
        "label": "t:sections.all.colors.product_card_color_scheme.label",
        "default": "background-1"
    },
    {
      "type": "select",
      "id": "section_framing",
      "options": [
        {
          "value": "disable",
          "label": "t:sections.all.section_framing.options__1.label"
        },
        {
          "value": "enable",
          "label": "t:sections.all.section_framing.options__2.label"
        },
        {
          "value": "grid",
          "label": "t:sections.all.section_framing.options__3.label"
        }
      ],
      "default": "disable",
      "label": "t:sections.all.section_framing.label",
      "info": "t:sections.all.section_framing.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing.header.content"
    },
    {
      "type": "range",
      "id": "top_spacing",
      "min": 0,
      "max": 2,
      "step": 0.1,
      "unit": "x",
      "label": "t:sections.all.spacing.top_spacing.label",
      "default": 0.8
    },
    {
      "type": "range",
      "id": "bottom_spacing",
      "min": 0,
      "max": 2,
      "step": 0.1,
      "unit": "x",
      "label": "t:sections.all.spacing.bottom_spacing.label",
      "default": 0.8
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "t:blocks.collection.name",
      "settings": [
        {
            "type": "collection",
            "id": "collection",
            "label": "t:blocks.collection.settings.collection.label"
        },
        {
          "type": "text",
          "id": "custom_heading",
          "label": "t:sections.all.settings_titles.heading.custom_heading.label",
          "info": "t:sections.collection-tabs.settings.custom_heading.info"
        },
        {
          "type": "header",
          "content": "t:sections.all.settings_titles.information_card.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.all.settings_titles.information_card.paragraph.content"
        },
        {
          "type": "select",
          "id": "info_card_style",
          "options": [
            {
              "value": "show",
              "label": "t:sections.all.media.image.image_style.options__1.label"
            }, 
            {
              "value": "hide",
              "label": "t:sections.all.media.image.image_style.options__2.label"
            }, 
            {
              "value": "show_on_desktop",
              "label": "t:sections.all.media.image.image_style.options__3.label"
            }
          ],
          "default": "hide",
          "label": "t:sections.all.settings_titles.information_card.info_card_style.label"
        },
        {
          "type": "select",
          "id": "info_card_position",
          "options": [
            {
              "value": "first",
              "label": "t:sections.all.settings_titles.information_card.position.options__1.label"
            }, 
            {
              "value": "last",
              "label": "t:sections.all.settings_titles.information_card.position.options__2.label"
            }
          ],
          "default": "first",
          "label": "t:sections.all.settings_titles.information_card.position.label"
        },
        {
          "type": "checkbox",
          "id": "info_card_center_text",
          "default": true,
          "label": "t:sections.all.alignment.center_text.label"
        },
        {
          "type": "url",
          "id": "info_card_link",
          "label": "t:sections.all.link.label"
        },
        {
          "type": "checkbox",
          "id": "info_card_target_blank",
          "default": false,
          "label": "t:sections.all.link.target_blank.label"
        },
        {
          "type": "text",
          "id": "info_card_subheading",
          "label": "t:sections.all.settings_titles.subheading.subheading.label",
          "default": "Subheading"
        },
        {
          "type": "select",
          "id": "info_card_subheading_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            }
          ],
          "default": "subheading-font",
          "label": "t:sections.all.headings_style.subheading_style.label"
        },
        {
          "type": "select",
          "id": "info_card_subheading_tag",
          "options": [
            {
                "value": "h1",
                "label": "t:sections.all.tag.options__1.label"
            },
            {
                "value": "h2",
                "label": "t:sections.all.tag.options__2.label"
            },
            {
                "value": "h3",
                "label": "t:sections.all.tag.options__3.label"
            },
            {
                "value": "h4",
                "label": "t:sections.all.tag.options__4.label"
            },
            {
                "value": "h5",
                "label": "t:sections.all.tag.options__5.label"
            },
            {
                "value": "h6",
                "label": "t:sections.all.tag.options__6.label"
            },
            {
                "value": "div",
                "label": "t:sections.all.tag.options__7.label"
            },
            {
                "value": "span",
                "label": "t:sections.all.tag.options__8.label"
            }, 
            {
                "value": "p",
                "label": "t:sections.all.tag.options__9.label"
            }
            ],
            "default": "h3",
            "label": "t:sections.all.tag.subheading_tag.label"
        },
        {
          "type": "text",
          "id": "info_card_heading",
          "label": "t:sections.all.settings_titles.heading.heading.label",
          "info": "t:sections.all.settings_titles.heading.heading.info",
          "default": "Heading"
        },
        {
          "type": "select",
          "id": "info_card_heading_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            },
            {
              "value": "page-title",
              "label": "t:sections.all.headings_style.options__5.label"
            }
          ],
          "default": "section-heading",
          "label": "t:sections.all.headings_style.heading_style.label"
        },
        {
          "type": "select",
          "id": "info_card_heading_tag",
          "options": [
            {
                "value": "h1",
                "label": "t:sections.all.tag.options__1.label"
            },
            {
                "value": "h2",
                "label": "t:sections.all.tag.options__2.label"
            },
            {
                "value": "h3",
                "label": "t:sections.all.tag.options__3.label"
            },
            {
                "value": "h4",
                "label": "t:sections.all.tag.options__4.label"
            },
            {
                "value": "h5",
                "label": "t:sections.all.tag.options__5.label"
            },
            {
                "value": "h6",
                "label": "t:sections.all.tag.options__6.label"
            },
            {
                "value": "div",
                "label": "t:sections.all.tag.options__7.label"
            },
            {
                "value": "span",
                "label": "t:sections.all.tag.options__8.label"
            }, 
            {
                "value": "p",
                "label": "t:sections.all.tag.options__9.label"
            }
            ],
            "default": "h2",
            "label": "t:sections.all.tag.heading_tag.label"
        },
        {
          "type": "richtext",
          "id": "info_card_text",
          "label": "t:sections.all.settings_titles.text.text.label"
        },
        {
          "type": "select",
          "id": "info_card_text_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            },
            {
              "value": "page-title",
              "label": "t:sections.all.headings_style.options__5.label"
            }
          ],
          "default": "body-font",
          "label": "t:sections.all.headings_style.text_style.label"
        },
        {
          "type": "select",
          "id": "info_card_button_style",
          "options": [
            {
              "value": "solid",
              "label": "t:sections.all.buttons.button_styles.options__1.label"
            },
            {
              "value": "outlined",
              "label": "t:sections.all.buttons.button_styles.options__2.label"
            },
            {
              "value": "link",
              "label": "t:sections.all.buttons.button_styles.options__3.label"
            }
          ],
          "default": "link",
          "label": "t:sections.all.buttons.button_styles.button_style.label"
        },
        {
          "type": "select",
          "id": "info_card_button_radius",
          "options": [
            {
              "value": "default",
              "label": "t:sections.all.corner_radius.options__7.label"
            },
            {
              "value": "0px",
              "label": "t:sections.all.corner_radius.options__1.label"
            },
            {
              "value": "3px",
              "label": "t:sections.all.corner_radius.options__2.label"
            },
            {
              "value": "5px",
              "label": "t:sections.all.corner_radius.options__3.label"
            },
            {
              "value": "12px",
              "label": "t:sections.all.corner_radius.options__4.label"
            },
            {
              "value": "16px",
              "label": "t:sections.all.corner_radius.options__5.label"
            },
            {
              "value": "2000px",
              "label": "t:sections.all.corner_radius.options__6.label"
            }
          ],
          "default": "default",
          "label": "t:sections.all.corner_radius.button_radius"
        },
        {
          "type": "color_scheme",
          "id": "info_card_color_scheme",
          "label": "t:sections.all.colors.info_card_color_scheme.label",
          "default": "background-5"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.collection-tabs.name",
      "blocks": [
        {
          "type": "collection",
          "settings": {
            "custom_heading": "First collection"
          }
        },
        {
          "type": "collection",
          "settings": {
            "custom_heading": "Second collection"
          }
        },
        {
          "type": "collection",
          "settings": {
            "custom_heading": "Third collection"
          }
        }
      ]
    }
  ],
  "enabled_on": {
    "templates": ["*"]
  }
}
{% endschema %}