{% if section.blocks.size > 0 %}
  {%- liquid
      assign disable_max_width = false
      if section.settings.disable_max_width 
      assign disable_max_width = true
      elsif section.settings.grid_style == 'page' and settings.full_width_page_grid
      assign disable_max_width = true
      elsif section.settings.grid_style == 'alternative' and settings.full_width_alt_grid
      assign disable_max_width = true
      elsif section.settings.grid_style == 'secondary' and settings.full_width_second_grid
      assign disable_max_width = true
      endif

      assign max_width = '100vw'
      if disable_max_width == false and section.settings.grid_style == 'page'
      assign max_width = settings.page_width | append: 'px'
      elsif disable_max_width == false and section.settings.grid_style == 'alternative'
      assign max_width = settings.alt_grid_width | append: 'px'
      elsif disable_max_width == false and section.settings.grid_style == 'secondary'
      assign max_width = settings.second_grid_width | append: 'px'
      endif
      
      assign full_width = false
      if section.settings.full_width
        assign max_width = '100vw'
        assign full_width = true
      endif

      assign uppercase_heading = false
      if section.settings.heading_style == 'secondary-heading' and settings.uppercase_secondary_headings
          assign uppercase_heading = true
      elsif section.settings.heading_style == 'section-heading' and settings.uppercase_section_headings
          assign uppercase_heading = true
      elsif section.settings.heading_style == 'page-title' and settings.uppercase_page_titles
          assign uppercase_heading = true
      elsif section.settings.heading_style == 'subheading-font' and settings.uppercase_subheadings
          assign uppercase_heading = true
      elsif section.settings.heading_style == 'body-font' and settings.uppercase_body
          assign uppercase_heading = true
      elsif section.settings.heading_style == 'caption-font' and settings.uppercase_caption
          assign uppercase_heading = true
      endif

      if settings.collection_card_style == 'overlay'
          assign enable_overlay = true
      endif

      assign desktop_item_width = section.settings.desktop_item_width | times: 1
      assign desktop_item_size = desktop_item_width | floor

      assign show_more = false
      if section.blocks.size > 0 and section.settings.on_mobile_show > 0
          assign show_more = true
      endif

      if section.settings.desktop_columns == '3'
          if section.blocks.size > 2
              assign columns = section.settings.desktop_columns
          else
              assign columns = '2'
          endif
      elsif section.settings.desktop_columns == '4'
          if section.blocks.size > 3
              assign columns = section.settings.desktop_columns
          elsif section.blocks.size == 3
              assign columns = '3'
          else 
              assign columns = '2'
          endif
      elsif section.settings.desktop_columns == '5'
          if section.blocks.size > 4
              assign columns = section.settings.desktop_columns
          elsif section.blocks.size == 4
              assign columns = '4'
          elsif section.blocks.size == 3
              assign columns = '3'
          else 
              assign columns = '2'
          endif
      else 
        assign columns = section.settings.desktop_columns
      endif

      assign columns_numeric = columns | times: 1
      assign columns_numeric_minus_1 = columns_numeric | minus: 1
      assign mobile_columns_numeric = 1

      assign onload_script = ''
      assign loading_images = 'eager'
      if settings.images_loading != 'disable'
          assign onload_script = 'this.parentNode.classList.add("lazyloaded");' 
          assign loading_images = 'lazy'
      endif
  -%}

  {%- liquid
    assign mobile_breakpoint = 768

    case section.settings.grid_style
      when 'page'
        assign grid_column_gap = settings.page_column_gap
      when 'alternative'
        assign grid_column_gap = settings.alt_grid_column_gap 
      when 'secondary'
        assign grid_column_gap = settings.second_grid_column_gap
      else
        assign grid_column_gap = 0
    endcase

    assign aspect_ratio_parts = section.settings.media_ratio | split: '/'
    assign aspect_ratio_height = aspect_ratio_parts[0] | times: 1
    assign aspect_ratio_width = aspect_ratio_parts[1] | times: 1

    assign card_height = 150
    assign card_image_width = card_height | times: aspect_ratio_height | divided_by: aspect_ratio_width 
    assign card_text_min_width = 180
    assign card_min_width = card_image_width | plus: card_text_min_width  
    assign gaps_width = grid_column_gap | times: columns_numeric_minus_1

    assign fixed_number_of_columns_breakpoint = columns_numeric | times: card_min_width | plus: gaps_width | append: 'px'
    assign mobile_fixed_number_of_columns_breakpoint = mobile_columns_numeric | times: card_min_width | plus: gaps_width | append: 'px'
  -%}

  {% style %}
    #shopify-section-{{ section.id }} {
      --grid-columns: {{ columns }};
      --top-spacing: {{ section.settings.top_spacing }};
      --bottom-spacing: {{ section.settings.bottom_spacing }};
      --focal-point: {{ settings.collection_focal_point }};
      --aspect-ratio: {{ section.settings.media_ratio }};
      --collection-overlay-opacity: 0;
      --card-height: {{ card_height }}px;
      --card-text-min-width: {{ card_text_min_width }}px;

      .featured-collection-grid-wrapper {
        container-type: inline-size;
        container-name: grid-container;

        @media screen and (max-width: {{ mobile_breakpoint }}px) {    
          container-name: mobile-grid-container;    
        } 
      }

      .grid {       
        grid-template-columns: repeat(
          auto-fit,
          minmax(calc(var(--card-height) * var(--aspect-ratio) + var(--card-text-min-width)), 1fr)
        );

        @container grid-container (min-width: {{ fixed_number_of_columns_breakpoint }}) {   
          grid-template-columns: repeat(
            {{ columns_numeric }},
            minmax(calc(var(--card-height) * var(--aspect-ratio) + var(--card-text-min-width)), 1fr)
          );
        }

        @container mobile-grid-container (min-width: {{ mobile_fixed_number_of_columns_breakpoint }}) {   
          grid-template-columns: repeat(
            {{ mobile_columns_numeric }},
            minmax(calc(var(--card-height) * var(--aspect-ratio) + var(--card-text-min-width)), 1fr)
          );
        }
      }
    }
  {% endstyle %}

  <div class="section{% if section.settings.section_framing == 'disable' or section.settings.full_width %} color-{{ section.settings.color_scheme }}{% endif %}{% unless section.settings.full_width %} side-margins{% endunless %}">
      <div class="section-container {% if section.settings.show_bottom_line %} bottom-line{% endif %}{% if section.settings.full_width == false %}{% if section.settings.section_framing == 'grid' %} {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endif %}{% unless section.settings.section_framing != 'disable' %} {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endunless %}{% endif %}">
        {% if section.settings.section_framing != 'disable' and section.settings.full_width == false %}<div class="section-radius elem-padding-l color-{{ section.settings.color_scheme }}"><div {% if section.settings.section_framing != 'grid' %}class="{{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}"{% endif %}>{% endif %}
        {% if section.settings.heading != blank %}
          <div class="{% if section.settings.full_width %}side-margins{% endif %}">
            <div class="template-header">
              {% liquid
                assign heading_text = section.settings.heading    
                assign processed_text = ''
                assign split_text = heading_text | split: '['
  
                for part in split_text
                  if part contains ']'
                    assign split_bracket = part | split: ']'
                    assign highlight_text = split_bracket[0]
                    assign after_bracket = split_bracket[1]
                    assign processed_text = processed_text | append: '<span class="highlight"><span>' | append: highlight_text | append: '</span></span>' | append: after_bracket
                  else
                    assign processed_text = processed_text | append: part
                  endif
                endfor
  
                assign final_text = ''
                assign split_text_curly = processed_text | split: '{'
  
                for part in split_text_curly
                  if part contains '}'
                    assign split_curly = part | split: '}'
                    assign styled_text = split_curly[0]
                    assign after_curly = split_curly[1]
                    assign final_text = final_text | append: '<span class="styled">' | append: styled_text | append: '</span>' | append: after_curly
                  else
                    assign final_text = final_text | append: part
                  endif
                endfor
              %}
              <{{ section.settings.heading_tag }} class="custom-heading {{ section.settings.grid_style }}-grid {% if disable_max_width %}disable-max-width{% endif %} 
                  {{ section.settings.heading_style }}{% if uppercase_heading %} uppercase{% endif %}{% if section.settings.center_text %} center{% endif %}{% if section.settings.heading_style == 'subheading-font' and settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}">
                  {% if section.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}<b>{% endif %}{{ final_text }}{% if section.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}</b>{% endif %}
              </{{ section.settings.heading_tag }}>
            </div>
          </div>
        {% endif %}
        <div class="featured-collection-grid-wrapper">
          <div class="{% unless full_width %}{{ section.settings.grid_style }}-grid {% if disable_max_width %}disable-max-width{% endif %}{% endunless %} {% if show_more %} show-more-array{% endif %}">        
            <ul class="grid
              {%- unless full_width %} {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endunless -%}
              {%- unless section.settings.disable_grid_gaps %} {{ section.settings.grid_style }}-grid-gaps{% endunless -%}" 
              role="list"
            >
              {%- for block in section.blocks -%}
                {%- case block.type -%}
                    {% when 'collection' %}
                      {% if block.settings.collection != blank %}
                          {% liquid
                            assign collection_image = block.settings.collection.featured_image
                            assign custom_image = false
                            if block.settings.custom_collection_image != blank
                                assign collection_image = block.settings.custom_collection_image
                                assign custom_image = true
                            endif 
                        
                            if section.index > 2 or forloop.index > 3
                               assign loading_images = 'lazy'
                            endif
                          %}

                          <li class="featured-collection-grid-card {% if full_width %} featured-collection-grid-card--full-width {% endif %} grid-item {{ forloop.index }} {% if show_more %} show-more-element{% endif %}" {{ block.shopify_attributes }}>
                            {% render 'card-collection', 
                                card_collection: block.settings.collection, 
                                media_ratio: section.settings.media_ratio, 
                                number_of_products: settings.show_number_of_products, 
                                collection_image: collection_image,
                                custom_image: custom_image,
                                loading_images: loading_images,
                                disable_max_width: disable_max_width,
                                max_width: max_width,
                                desktop_columns: section.settings.desktop_columns,
                                mobile_columns: 1,
                                card_color_scheme: section.settings.collection_card_color_scheme,
                                parent_color_scheme: section.settings.color_scheme,
                                enable_overlay: enable_overlay,
                                show_collection_card_border: section.settings.show_collection_card_border,
                                full_width: full_width,
                                card_style: 'media-on-side',
                                onload_script: onload_script
                            %}
                          </li>
                      {% else %}
                          <li class="featured-collection-grid-card {% if full_width %} featured-collection-grid-card--full-width {% endif %} grid-item {{ forloop.index }} {% if show_more %} show-more-element{% endif %}" {{ block.shopify_attributes }}>
                            {% render 'card-collection-placeholder', 
                                media_ratio: section.settings.media_ratio,
                                enable_overlay: enable_overlay,
                                show_collection_card_border: section.settings.show_collection_card_border,
                                card_color_scheme: section.settings.collection_card_color_scheme,
                                full_width: full_width,
                                parent_color_scheme: section.settings.color_scheme,
                                card_style: 'media-on-side'
                            %}
                          </li>
                      {% endif %}
                {%- endcase -%}
              {%- endfor -%}
            </ul>
            
            {%- if show_more -%}
              {% if full_width %}<div class="side-margins"><div class="{{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}">{% endif %}
                <div class="show-more-button-wrapper">
                  <show-more-button class="show-more-button visually-hidden{% if section.settings.show_more_button_icon != blank %} button-block--small-padding{% endif %}" data-show-desktop="{{ section.blocks.size }}" data-show-mobile="{{ section.settings.on_mobile_show }}" data-breakpoint="{{ mobile_breakpoint }}">
                    <button class="button body-font {{ section.settings.show_more_button_style }}-button button--secondary{% if settings.use_heading_font_secondary_buttons %} heading-font-style{% endif %}{% if settings.uppercase_secondary_buttons %} uppercase{% endif %}{% if section.settings.show_more_button_icon != blank %} button-with-icon{% if section.settings.swap_show_more_button_icon %} icon--swap{% endif %}{% endif %}">
                      {% if section.settings.show_more_button_icon != blank %}
                        {%- liquid
                          assign icon_name = section.settings.show_more_button_icon | split: '/'
                          if icon_name.size == 3
                              assign file_name = icon_name.first | append: '_' | append: icon_name[1]
                          elsif icon_name.size == 2
                              assign file_name = icon_name.first
                          endif
                          assign icon = icon_name.last
                        -%}
                        <span class="icon-accordion flex--row icon--small">{% render 'catalog-icons', file_name: file_name, icon: icon %}</span>
                      {% endif %}
                      {% if settings.bolder_secondary_buttons_font %}<b>{% endif %}{% if section.settings.show_more_button_label != blank %}{{ section.settings.show_more_button_label }}{% else %}{{ 'sections.featured_blog.show_more' | t }}{% endif %}{% if settings.bolder_secondary_buttons_font %}</b>{% endif %}
                    </button>
                  </show-more-button>
                </div>
              {% if full_width %}</div></div>{%endif %}
            {%- endif -%}              
            </div>
        </div>
        {% if section.settings.section_framing != 'disable' and section.settings.full_width == false %}</div></div>{% endif %}
      </div>
  </div> 
{% endif %}

{% schema %}
{
  "name": "t:sections.featured-collection-grid.name",
  "tag": "section",
  "class": "section-featured-collection-grid",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "t:sections.all.settings_titles.heading.heading.label",
      "info": "t:sections.all.settings_titles.heading.heading.info",
      "default": "Collection grid heading"
    },
    {
      "type": "select",
      "id": "heading_style",
      "options": [
        {
          "value": "caption-font",
          "label": "t:sections.all.headings_style.options__6.label"
        },
        {
          "value": "body-font",
          "label": "t:sections.all.headings_style.options__1.label"
        },
        {
          "value": "subheading-font",
          "label": "t:sections.all.headings_style.options__2.label"
        },
        {
          "value": "secondary-heading",
          "label": "t:sections.all.headings_style.options__3.label"
        },
        {
          "value": "section-heading",
          "label": "t:sections.all.headings_style.options__4.label"
        },
        {
          "value": "page-title",
          "label": "t:sections.all.headings_style.options__5.label"
        }
      ],
      "default": "section-heading",
      "label": "t:sections.all.headings_style.heading_style.label"
    },
    {
      "type": "select",
      "id": "heading_tag",
      "options": [
        {
            "value": "h1",
            "label": "t:sections.all.tag.options__1.label"
        },
        {
            "value": "h2",
            "label": "t:sections.all.tag.options__2.label"
        },
        {
            "value": "h3",
            "label": "t:sections.all.tag.options__3.label"
        },
        {
            "value": "h4",
            "label": "t:sections.all.tag.options__4.label"
        },
        {
            "value": "h5",
            "label": "t:sections.all.tag.options__5.label"
        },
        {
            "value": "h6",
            "label": "t:sections.all.tag.options__6.label"
        },
        {
            "value": "div",
            "label": "t:sections.all.tag.options__7.label"
        },
        {
            "value": "span",
            "label": "t:sections.all.tag.options__8.label"
        }, 
        {
            "value": "p",
            "label": "t:sections.all.tag.options__9.label"
        }
        ],
        "default": "h2",
        "label": "t:sections.all.tag.heading_tag.label"
    },
    {
      "type": "checkbox",
      "id": "center_text",
      "default": false,
      "label": "t:sections.all.alignment.center_text.label"
    },
    {
        "type": "header",
        "content": "t:sections.featured-collection-grid.settings.grid_header.content"
    },
    {
        "type": "select",
        "id": "desktop_columns",
        "options": [
          {
            "value": "2",
            "label": "t:sections.all.columns.options__2.label"
          },
          {
            "value": "3",
            "label": "t:sections.all.columns.options__3.label"
          },
          {
            "value": "4",
            "label": "t:sections.all.columns.options__4.label"
          },
          {
            "value": "5",
            "label": "t:sections.all.columns.options__5.label"
          }
        ],
        "default": "3",
        "label": "t:sections.all.columns.desktop_columns.label"
    },
    {
      "type": "range",
      "id": "on_mobile_show",
      "min": 0,
      "max": 12,
      "step": 1,
      "default": 2,
      "label": "t:sections.featured-blog.settings.on_mobile_show.label",
      "info": "t:sections.featured-blog.settings.on_mobile_show.info"
    },
    {
      "type": "text",
      "id": "show_more_button_label",
      "default": "Show more",
      "label": "t:sections.featured-blog.settings.show_more_button_label.label"
    },
    {
      "type": "text",
      "id": "show_more_button_icon",
      "label": "t:sections.featured-blog.settings.show_more_button_icon.label",
      "info": "t:sections.all.icons.icon.info"
    },
    {
      "type": "checkbox",
      "id": "swap_show_more_button_icon",
      "default": false,
      "label": "t:sections.all.icons.swap_icon_position.label"
    },
    {
      "type": "select",
      "id": "show_more_button_style",
      "options": [
        {
          "value": "solid",
          "label": "t:sections.all.buttons.button_styles.options__1.label"
        },
        {
          "value": "outlined",
          "label": "t:sections.all.buttons.button_styles.options__2.label"
        },
        {
          "value": "link",
          "label": "t:sections.all.buttons.button_styles.options__3.label"
        }
      ],
      "default": "solid",
      "label": "t:sections.featured-blog.settings.show_more_button_style.label"
    },
    {
        "type": "header",
        "content": "t:sections.featured-collection-grid.settings.collection_cards_header.content"
    },
    {
        "type": "checkbox",
        "id": "show_collection_card_border",
        "default": true,
        "label": "t:sections.all.show_frame.label"
    },
    {
      "type": "select",
      "id": "media_ratio",
      "label": "t:sections.all.media.media_ratio.label",
      "options": [
        {
          "value": "1\/1",
          "label": "t:sections.all.media.media_ratio.options__2.label"
        },
        {
          "value": "4\/5",
          "label": "t:sections.all.media.media_ratio.options__3.label"
        },
        {
          "value": "2\/3",
          "label": "t:sections.all.media.media_ratio.options__4.label"
        },
        {
          "value": "4\/3",
          "label": "t:sections.all.media.media_ratio.options__5.label"
        }
      ],
      "default": "2\/3"
    },
    {
      "type": "header",
      "content": "t:sections.all.settings_titles.section_layout_header.content"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "default": false,
      "label": "t:sections.all.full_width.label"
    },
    {
      "type": "select",
      "id": "grid_style",
      "options": [
        {
          "value": "page",
          "label": "t:sections.all.grid_style.options__1.label"
        },
        {
          "value": "secondary",
          "label": "t:sections.all.grid_style.options__3.label"
        },
        {
          "value": "alternative",
          "label": "t:sections.all.grid_style.options__2.label"
        }
      ],
      "default": "alternative",
      "label": "t:sections.all.grid_style.label"
    },
    {
      "type": "checkbox",
      "id": "disable_max_width",
      "default": false,
      "label": "t:sections.all.disable_max_width.label"
    },
    {
      "type": "checkbox",
      "id": "disable_grid_gaps",
      "default": true,
      "label": "t:sections.all.disable_grid_gaps.label"
    },
    {
      "type": "checkbox",
      "id": "show_bottom_line",
      "default": false,
      "label": "t:sections.all.show_bottom_line.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.colors.header.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.color_scheme.label",
      "default": "background-1"
    },
    {
        "type": "color_scheme",
        "id": "collection_card_color_scheme",
        "label": "t:sections.all.colors.card_color_scheme.label",
        "default": "background-1"
    },
    {
      "type": "select",
      "id": "section_framing",
      "options": [
        {
          "value": "disable",
          "label": "t:sections.all.section_framing.options__1.label"
        },
        {
          "value": "enable",
          "label": "t:sections.all.section_framing.options__2.label"
        },
        {
          "value": "grid",
          "label": "t:sections.all.section_framing.options__3.label"
        }
      ],
      "default": "disable",
      "label": "t:sections.all.section_framing.label",
      "info": "t:sections.all.section_framing.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing.header.content"
    },
    {
      "type": "range",
      "id": "top_spacing",
      "min": 0,
      "max": 2,
      "step": 0.1,
      "unit": "x",
      "label": "t:sections.all.spacing.top_spacing.label",
      "default": 1
    },
    {
      "type": "range",
      "id": "bottom_spacing",
      "min": 0,
      "max": 2,
      "step": 0.1,
      "unit": "x",
      "label": "t:sections.all.spacing.bottom_spacing.label",
      "default": 1
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "t:sections.main-list-collections.blocks.collection.name",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "t:sections.main-list-collections.blocks.collection.settings.collection.label"
        },
        {
          "type": "image_picker",
          "id": "custom_collection_image",
          "label": "t:sections.main-list-collections.blocks.collection.settings.custom_collection_image.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.featured-collection-grid.name",
      "blocks": [
        {
            "type": "collection"
        },
        {
            "type": "collection"
        },
        {
            "type": "collection"
        },
        {
            "type": "collection"
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": [
      "*"
    ]
  }
}
{% endschema %}