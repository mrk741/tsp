{% liquid 
  assign show_section = false
  for block in section.blocks
    case block.type
      when 'image'
        if block.settings.image != blank or block.settings.heading != blank or block.settings.text != blank or block.settings.button_label != blank
          assign show_section = true
        endif
      when 'loop_video'
        if block.settings.video_load != blank or block.settings.heading != blank or block.settings.text != blank or block.settings.button_label != blank
          assign show_section = true
        endif
      when 'text'
        if block.settings.heading != blank or block.settings.text != blank or block.settings.button_label != blank
          assign show_section = true
        endif
    endcase
  endfor
%}
{% if section.blocks.size > 0 and show_section or request.design_mode %}
{{ 'section-multicolumn.css' | asset_url | stylesheet_tag }}
{{ 'section-image-grid.css' | asset_url | stylesheet_tag }}

{%- liquid
    assign disable_max_width = false
    if section.settings.disable_max_width 
      assign disable_max_width = true
    elsif section.settings.grid_style == 'page' and settings.full_width_page_grid
      assign disable_max_width = true
    elsif section.settings.grid_style == 'alternative' and settings.full_width_alt_grid
      assign disable_max_width = true
    elsif section.settings.grid_style == 'secondary' and settings.full_width_second_grid
      assign disable_max_width = true
    endif

    assign max_width = '100vw'
    if disable_max_width == false and section.settings.grid_style == 'page'
        assign max_width = settings.page_width | append: 'px'
    elsif disable_max_width == false and section.settings.grid_style == 'alternative'
        assign max_width = settings.alt_grid_width | append: 'px'
    elsif disable_max_width == false and section.settings.grid_style == 'secondary'
        assign max_width = settings.second_grid_width | append: 'px'
    endif

    assign full_width = false
    if section.settings.full_width
      assign max_width = '100vw'
      assign full_width = true
    endif

    assign section_framing = false
    if section.settings.section_framing != 'disable'
        assign section_framing = true
    endif

    assign amount_block = section.blocks | size

    if section.settings.desktop_columns == '3'
      if amount_block > 2
        assign columns = section.settings.desktop_columns
      else
        assign columns = '2'
      endif
    elsif section.settings.desktop_columns == '4'
      if amount_block > 3
        assign columns = section.settings.desktop_columns
      elsif amount_block == 3
        assign columns = '3'
      else 
        assign columns = '2'
      endif
    elsif section.settings.desktop_columns == '5'
      if amount_block > 4
          assign columns = section.settings.desktop_columns
      elsif amount_block == 4
          assign columns = '4'
      elsif amount_block == 3
          assign columns = '3'
      else 
          assign columns = '2'
      endif
    else 
      assign columns = section.settings.desktop_columns
    endif
    
    if columns == '2'
      assign media_size = 0.50
    elsif columns == '3'
      assign media_size = 0.35
    else
      assign media_size = 0.27
    endif

    assign mobile_columns = section.settings.mobile_columns
    if amount_block == 1
      assign mobile_columns = '1'
    endif

    assign onload_script = ''
    assign loading_images = ''
    if settings.images_loading != 'disable'
        assign onload_script = 'this.parentNode.classList.add("lazyloaded");' 
        assign loading_images = 'lazy'
    elsif section.index > 2
      assign loading_images = 'lazy'
    endif
-%}

{% style %}
    #shopify-section-{{ section.id }} {
        --grid-columns: {{ columns }};
        --top-spacing: {{ section.settings.top_spacing }};
        --desktop-grid-type: {{ columns }};
        --bottom-spacing: {{ section.settings.bottom_spacing }};
        {% if section.settings.media_radius == 'default' %}
            --media-radius: {{ settings.images_and_sections_radius }};
        {% else %}
            --media-radius: {{ section.settings.media_radius }};
        {% endif %}
    }
    @media screen and (max-width: 1440px) {
      #shopify-section-{{ section.id }} {
        --grid-columns: {% if columns == '5' %}4{% else %}{{ columns }}{% endif %};
        --desktop-grid-type: {% if columns == '5' %}4{% else %}{{ columns }}{% endif %};
      }
    }
    @media screen and (max-width: 1024px) {
      #shopify-section-{{ section.id }} {
        --grid-columns: {% if columns == '5' or columns == '4' %}3{% else %}{{ columns }}{% endif %};
        --desktop-grid-type: {% if columns == '5' or columns == '4' %}3{% else %}{{ columns }}{% endif %};
      }
    }

    @media screen and (max-width: 768px) {
        #shopify-section-{{ section.id }} {
            --grid-columns: {{ mobile_columns }};
            --desktop-grid-type: {{ mobile_columns }};
        }
    }
    {% for block in section.blocks %}
      .multicolumn-item-{{ block.id }} {
        --aspect-ratio: {{ block.settings.media_ratio }};
        --video-controls-position: {{ block.settings.control_horizontal_position }};
      }
      {% if settings.images_loading != 'disable' and block.settings.media_ratio == 'auto' %}
        .multicolumn-item-{{ block.id }} .lazy-image,
        .multicolumn-item-{{ block.id }} .lazy-video {
          aspect-ratio: var(--asp-rat);
        }
      {% endif %}
    {% endfor %}
{% endstyle %}

<div class="section{% if section_framing == false or section.settings.full_width %} color-{{ section.settings.color_scheme }}{% endif %}{% unless section.settings.full_width %} side-margins{% endunless %}{% if section.settings.show_bottom_line %} bottom-line{% endif %}">
    <div class="section-container{% if section.settings.full_width == false %}{% if section.settings.section_framing == 'grid' %} multicolumn {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endif %}{% unless section_framing %} multicolumn {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endunless %}{% else %} multicolumn {{ section.settings.grid_style }}-grid{% if disable_max_width or full_width %} disable-max-width{% endif %}{% endif %}">
      {% if section_framing and section.settings.full_width == false %}<div class="section-radius elem-padding-l color-{{ section.settings.color_scheme }}"><div class="multicolumn {% if section.settings.section_framing != 'grid' %}{{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endif %}">{% endif %}
        {% if section.settings.subheading != blank or section.settings.heading != blank %}
            <div class="section-header{% if section.settings.center_text %} center{% endif %} {% if section.settings.full_width %}side-margins{% endif %}">
                {%- if section.settings.subheading != blank -%}
                  {%- liquid
                    assign uppercase_subheading = false
                    if section.settings.subheading_style == 'section-heading' and settings.uppercase_section_headings
                        assign uppercase_subheading = true
                    elsif section.settings.subheading_style == 'secondary-heading' and settings.uppercase_secondary_headings
                        assign uppercase_subheading = true
                    elsif section.settings.subheading_style == 'subheading-font' and settings.uppercase_subheadings
                        assign uppercase_subheading = true
                    elsif section.settings.subheading_style == 'body-font' and settings.uppercase_body
                        assign uppercase_subheading = true
                    elsif section.settings.subheading_style == 'caption-font' and settings.uppercase_caption
                        assign uppercase_subheading = true
                    endif
                  -%}
                  <{{ section.settings.subheading_tag }} class="{{ section.settings.subheading_style }}{% if uppercase_subheading %} uppercase{% endif %} {% if section.settings.full_width %} {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endif %}
                    {% if section.settings.subheading_style == 'subheading-font' %}{% if settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}{% endif %}">
                    {% if section.settings.subheading_style == 'subheading-font' and settings.bolder_subheadings_font %}<b>{% endif %}
                    {{ section.settings.subheading }}
                    {% if section.settings.subheading_style == 'subheading-font' and settings.bolder_subheadings_font %}</b>{% endif %}
                  </{{ section.settings.subheading_tag }}>
                {%- endif -%}
                  {%- if section.settings.heading != blank -%}
                    {%- liquid
                      assign uppercase_heading = false
                      if section.settings.heading_style == 'secondary-heading' and settings.uppercase_secondary_headings
                          assign uppercase_heading = true
                      elsif section.settings.heading_style == 'section-heading' and settings.uppercase_section_headings
                          assign uppercase_heading = true
                      elsif section.settings.heading_style == 'page-title' and settings.uppercase_page_titles
                          assign uppercase_heading = true
                      elsif section.settings.heading_style == 'subheading-font' and settings.uppercase_subheadings
                          assign uppercase_heading = true
                      elsif section.settings.heading_style == 'body-font' and settings.uppercase_body
                          assign uppercase_heading = true
                      elsif section.settings.heading_style == 'caption-font' and settings.uppercase_caption
                          assign uppercase_heading = true
                      endif

                      assign heading_text = section.settings.heading
                      assign processed_text = ''
                      assign split_text = heading_text | split: '['

                      for part in split_text
                        if part contains ']'
                          assign split_bracket = part | split: ']'
                          assign highlight_text = split_bracket[0]
                          assign after_bracket = split_bracket[1]
                          assign processed_text = processed_text | append: '<span class="highlight"><span>' | append: highlight_text | append: '</span></span>' | append: after_bracket
                        else
                          assign processed_text = processed_text | append: part
                        endif
                      endfor

                      assign final_text = ''
                      assign split_text_curly = processed_text | split: '{'

                      for part in split_text_curly
                        if part contains '}'
                          assign split_curly = part | split: '}'
                          assign styled_text = split_curly[0]
                          assign after_curly = split_curly[1]
                          assign final_text = final_text | append: '<span class="styled">' | append: styled_text | append: '</span>' | append: after_curly
                        else
                          assign final_text = final_text | append: part
                        endif
                      endfor
                    -%}
                    <{{ section.settings.heading_tag }} class="custom-heading {{ section.settings.heading_style }}{% if uppercase_heading %} uppercase{% endif %} {% if section.settings.full_width %} {{ section.settings.grid_style }}-grid{% if disable_max_width %} disable-max-width{% endif %}{% endif %}{% if section.settings.heading_style == 'subheading-font' and settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}">
                      {% if section.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}<b>{% endif %}{{ final_text }}{% if section.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}</b>{% endif %}
                    </{{ section.settings.heading_tag }}>
                  {%- endif -%}
            </div>
        {% endif %}
        {% if amount_block > 0 %}
          {% if section.settings.enable_masonry %}<cascading-grid>{% endif %} 
            <div class="multicolumn__items grid {% if section.settings.disable_grid_gaps %}multicolumn__items-without-gaps{% else %}{{ section.settings.grid_style }}-grid-gaps{% endif %}">
                {%- for block in section.blocks -%}
                    {%- case block.type -%}
                        {%- when 'image' -%}
                            <div class="{% if section.settings.enable_masonry %}grid-item {% endif %}grid-item-desktop--{{ columns }} grid-item-mobile--{{ mobile_columns }} multicolumn__item multicolumn-item-{{ block.id }} {% if full_width %}multicolumn__item--full-width{% endif %} {{ block.settings.text_alignment }}" {{ block.shopify_attributes }}>
                              {% if block.settings.link != blank %}<a href="{{ block.settings.link }}" class="multicolumn__item-link multicolumn__item-wrapper color-{{ block.settings.color_scheme }}{% if block.settings.color_scheme != section.settings.color_scheme %} with-color{% endif %}" {% if block.settings.block_target_blank %}target="_blank"{% endif %}>
                              {% else %}<div class="multicolumn__item-wrapper color-{{ block.settings.color_scheme }}{% if block.settings.color_scheme != section.settings.color_scheme %} with-color{% endif %}">{% endif %}
                                <div class="multicolumn__media aspect-ratio"{% if settings.disable_right_click %} oncontextmenu="return false"{% endif %} {% if section.settings.enable_masonry and block.settings.media_ratio == 'original' and settings.images_loading != 'disable' %}style="aspect-ratio: {{ block.settings.image.aspect_ratio }};"{% endif %}>
                                    {%- if block.settings.image != blank -%}
                                      {%- liquid
                                        assign widths = '200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200'
                                        assign img_class = "multicolumn__image"
                                      -%}
                                      {%- capture sizes -%}
                                        {% if disable_max_width or full_width %}
                                          (max-width: 768px) calc(100vw / {{ section.settings.mobile_columns | times: 1 }}), {{ max_width | times: media_size | floor }}vw
                                        {% else %}
                                          (max-width: 768px) calc(100vw / {{ section.settings.mobile_columns | times: 1 }}), (max-width: {{ max_width }}) {{ max_width | times: media_size | floor }}px, {{ max_width | times: media_size | floor }}px
                                        {% endif %}
                                      {%- endcapture -%}
                                      {% if settings.images_loading != 'disable' %}
                                        <figure class="lazy-image lazy-image--{{ settings.images_loading }}" style="--asp-rat: {{ block.settings.image.aspect_ratio }}">
                                      {% endif %}
                                      {{
                                        block.settings.image
                                        | image_url: width: 3200
                                        | image_tag:
                                        sizes: sizes,
                                        widths: widths, 
                                        class: img_class,
                                        alt: block.settings.image.alt,
                                        draggable: false,
                                        loading: loading_images,
                                        onload: onload_script
                                      }}
                                      {% if settings.images_loading != 'disable' %}
                                        {% if settings.images_loading != 'fade_scale' %}
                                        <div class="lazy-image__preloader lazy-image__preloader-{{ settings.images_loading }}" aria-hidden="true">
                                          <img 
                                          alt="{{ block.settings.image.alt | escape }}" 
                                          src="{{ block.settings.image | image_url: width: 10 }}"
                                          draggable="false"
                                          width="10" 
                                          height="10">
                                        </div>
                                        {% endif %}
                                    </figure>
                                    {% endif %}
                                    {%- elsif block.settings.image == blank and request.design_mode -%}
                                        {{ 'image' | placeholder_svg_tag: 'placeholder-svg' }}
                                    {%- endif -%}
                                </div>
                                {% if block.settings.heading != blank or block.settings.text != blank or block.settings.button_label != blank %}
                                    <div class="multicolumn__info flex--column">
                                        {% if block.settings.heading != blank %}
                                          {%- liquid
                                            assign uppercase_heading = false
                                            if block.settings.heading_style == 'section-heading' and settings.uppercase_section_headings
                                                assign uppercase_heading = true
                                            elsif block.settings.heading_style == 'page-title' and settings.uppercase_page_titles
                                                assign uppercase_heading = true
                                            elsif block.settings.heading_style == 'secondary-heading' and settings.uppercase_secondary_headings
                                              assign uppercase_heading = true
                                            elsif block.settings.heading_style == 'subheading-font' and settings.uppercase_subheadings
                                                assign uppercase_heading = true
                                            elsif block.settings.heading_style == 'body-font' and settings.uppercase_body
                                                assign uppercase_heading = true
                                            elsif block.settings.heading_style == 'caption-font' and settings.uppercase_caption
                                                assign uppercase_heading = true
                                            endif
                                            assign uppercase_text = false
                                            if block.settings.text_style == 'section-heading' and settings.uppercase_section_headings
                                              assign uppercase_text = true
                                            elsif block.settings.text_style == 'secondary-heading' and settings.uppercase_secondary_headings
                                              assign uppercase_text = true
                                            elsif block.settings.text_style == 'subheading-font' and settings.uppercase_subheadings
                                                assign uppercase_text = true
                                            elsif block.settings.text_style == 'body-font' and settings.uppercase_body
                                                assign uppercase_text = true
                                            elsif block.settings.text_style == 'caption-font' and settings.uppercase_caption
                                                assign uppercase_text = true
                                            endif

                                            assign heading_text = block.settings.heading
                                            assign processed_text = ''
                                            assign split_text = heading_text | split: '['

                                            for part in split_text
                                              if part contains ']'
                                                assign split_bracket = part | split: ']'
                                                assign highlight_text = split_bracket[0]
                                                assign after_bracket = split_bracket[1]
                                                assign processed_text = processed_text | append: '<span class="highlight"><span>' | append: highlight_text | append: '</span></span>' | append: after_bracket
                                              else
                                                assign processed_text = processed_text | append: part
                                              endif
                                            endfor

                                            assign final_text = ''
                                            assign split_text_curly = processed_text | split: '{'

                                            for part in split_text_curly
                                              if part contains '}'
                                                assign split_curly = part | split: '}'
                                                assign styled_text = split_curly[0]
                                                assign after_curly = split_curly[1]
                                                assign final_text = final_text | append: '<span class="styled">' | append: styled_text | append: '</span>' | append: after_curly
                                              else
                                                assign final_text = final_text | append: part
                                              endif
                                            endfor
                                          -%}
                                            <p class="multicolumn__info-title custom-heading {{ block.settings.heading_style }}{% if uppercase_heading %} uppercase{% endif %}{% if block.settings.heading_style == 'subheading-font' and settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}">
                                              {% if block.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}<b>{% endif %}{{ final_text }}{% if block.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}</b>{% endif %}
                                            </p>
                                        {% endif %}
                                        {% if block.settings.text != blank %}
                                            <div class="multicolumn__info-text richtext rte link-underline {{ block.settings.text_style }}
                                              {% if block.settings.text_style == 'subheading-font' %}{% if settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}{% if settings.uppercase_subheadings %} uppercase{% endif %}{% if settings.bolder_subheadings_font %} bold{% endif %}
                                              {% else %}{% if uppercase_text %} uppercase{% endif %}{% endif %}">
                                              {% if block.settings.link != blank %}<object>{% endif %}{{ block.settings.text }}{% if block.settings.link != blank %}</object>{% endif %}
                                            </div>
                                        {% endif %}
                                        {% if block.settings.button_label != blank or block.settings.button_icon != blank %}
                                            <div class="multicolumn__info-button{% if block.settings.button_label != blank and block.settings.button_icon != blank %} button-block--small-padding{% endif %}">
                                                {%- if block.settings.button_link != blank -%}{% if block.settings.link != blank %}<object>{% endif %}<a href="{{ block.settings.button_link }}" {% if block.settings.target_blank %}target="_blank"{% endif %} class="button {{ block.settings.button_style }}-button body-font button--secondary{% if settings.use_heading_font_secondary_buttons %} heading-font-style{% endif %}{% if settings.uppercase_secondary_buttons %} uppercase{% endif %}{% if block.settings.button_icon != blank %} button-with-icon{% if block.settings.swap_button_icon %} icon--swap{% endif %}{% endif %}">{%- else -%}
                                                <span disabled class="button {{ block.settings.button_style }}-button body-font button--secondary{% if settings.use_heading_font_secondary_buttons %} heading-font-style{% endif %}{% if settings.uppercase_secondary_buttons %} uppercase{% endif %}{% if block.settings.button_icon != blank %} button-with-icon{% if block.settings.swap_button_icon %} icon--swap{% endif %}{% endif %}">{%- endif -%}
                                                  {% if block.settings.button_icon != blank %}
                                                    {%- liquid
                                                      assign icon_name = block.settings.button_icon | split: '/'
                                                      if icon_name.size == 3
                                                          assign file_name = icon_name.first | append: '_' | append: icon_name[1]
                                                      elsif icon_name.size == 2
                                                          assign file_name = icon_name.first
                                                      endif
                                                      assign icon = icon_name.last
                                                    -%}
                                                    <span class="icon-accordion flex--row icon--small">{% render 'catalog-icons', file_name: file_name, icon: icon %}</span>
                                                  {% endif %}
                                                  {% if settings.bolder_secondary_buttons_font %}<b>{% endif %}{{ block.settings.button_label }}{% if settings.bolder_secondary_buttons_font %}</b>{% endif %}
                                                {%- if block.settings.button_link != blank -%}</a>{% if block.settings.link != blank %}</object>{% endif %}{%- else -%}</span>{%- endif -%}
                                            </div>
                                        {% endif %}
                                    </div>
                                {% endif %}
                              {% if block.settings.link != blank %}</a>{% else %}</div>{% endif %}
                            </div>
                        {%- when 'loop_video' -%}
                            <div class="{% if section.settings.enable_masonry %}grid-item {% endif %}grid-item-desktop--{{ columns }} grid-item-mobile--{{ mobile_columns }} multicolumn__item multicolumn__item--video multicolumn-item-{{ block.id }} {% if full_width %}multicolumn__item--full-width{% endif %} {{ block.settings.text_alignment }}{% if block.settings.enable_mute or block.settings.enable_pause %} video-controls-js{% endif %}" {{ block.shopify_attributes }}>
                                {% if block.settings.link != blank %}<a href="{{ block.settings.link }}" class="multicolumn__item-link multicolumn__item-wrapper color-{{ block.settings.color_scheme }}{% if block.settings.color_scheme != section.settings.color_scheme %} with-color{% endif %}" {% if block.settings.block_target_blank %}target="_blank"{% endif %}>
                                {% else %}<div class="multicolumn__item-wrapper color-{{ block.settings.color_scheme }}{% if block.settings.color_scheme != section.settings.color_scheme %} with-color{% endif %}">{% endif %}
                                <div class="multicolumn__media aspect-ratio"{% if settings.disable_right_click %} oncontextmenu="return false"{% endif %} {% if section.settings.enable_masonry and block.settings.media_ratio == 'original' and settings.images_loading != 'disable' %}style="aspect-ratio: {{ block.settings.video_load.aspect_ratio }};"{% endif %}>
                                    {%- if block.settings.video_load != blank -%}
                                      {% if settings.images_loading == 'disable' %}
                                        {{ block.settings.video_load | video_tag: image_size: "700x", autoplay: false, preload: 'none', loop: true, muted: true, controls: false, alt: block.settings.video_load.alt }}
                                      {% else %}
                                        <figure class="lazy-video lazy-image--{{ settings.images_loading }}" style="--asp-rat: {{ block.settings.video_load.aspect_ratio }}">
                                          {{ block.settings.video_load | video_tag: image_size: "700x", autoplay: false, preload: 'none', loop: true, muted: true, controls: false, alt: block.settings.video_load.alt, oncanplay: 'this.parentNode.classList.add("lazyloaded");' }}
                                          {% if settings.images_loading != 'fade_scale' %}
                                          <div class="lazy-image__preloader lazy-image__preloader--full lazy-image__preloader-{{ settings.images_loading }}" aria-hidden="true" >
                                              <img 
                                                  alt="{{ block.settings.video_load.alt | escape }}" 
                                                  src="{{ block.settings.video_load.preview_image | image_url: width: 10 }}"
                                                  draggable="false"
                                                  width="10" 
                                                  height="10">
                                          </div>
                                          {% endif %}
                                      </figure>
                                      {% endif %}
                                        {% if block.settings.enable_mute or block.settings.enable_pause %}
                                          <video-controls class="video-controls elem-padding-s">
                                            <div class="video-controls__wrapper flex--row">
                                              {% if block.settings.enable_pause %}
                                                <button class="button--controls icon icon--large button--pause play" aria-label="{{ 'accessibility.pause' | t }}">
                                                  <span class="icon--pause">{%- render 'glyphs_interface', icon: 'pause-circle' -%}</span>
                                                  <span class="icon--play">{%- render 'glyphs_interface', icon: 'play-circle' -%}</span>
                                                </button>
                                              {% endif %}
                                              {% if block.settings.enable_mute %}
                                                <button class="button--controls icon icon--large button--mute mute" aria-label="{{ 'accessibility.unmute' | t }}">
                                                  <span class="icon--mute">{%- render 'glyphs_interface', icon: 'mute' -%}</span>
                                                  <span class="icon--unmute">{%- render 'glyphs_interface', icon: 'sound-on' -%}</span>
                                                </button>
                                              {% endif %}
                                            </div>
                                          </video-controls>
                                        {% endif %}
                                    {%- elsif block.settings.video_load == blank and request.design_mode -%}
                                        {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg' }}
                                    {%- endif -%}
                                </div>
                                {% if block.settings.heading != blank or block.settings.text != blank or block.settings.button_label != blank %}
                                    <div class="multicolumn__info flex--column">
                                        {% if block.settings.heading != blank %}
                                          {%- liquid
                                            assign uppercase_heading = false
                                            if block.settings.heading_style == 'section-heading' and settings.uppercase_section_headings
                                                assign uppercase_heading = true
                                            elsif block.settings.heading_style == 'page-title' and settings.uppercase_page_titles
                                                assign uppercase_heading = true
                                            elsif block.settings.heading_style == 'secondary-heading' and settings.uppercase_secondary_headings
                                              assign uppercase_heading = true
                                            elsif block.settings.heading_style == 'subheading-font' and settings.uppercase_subheadings
                                                assign uppercase_heading = true
                                            elsif block.settings.heading_style == 'body-font' and settings.uppercase_body
                                                assign uppercase_heading = true
                                            elsif block.settings.heading_style == 'caption-font' and settings.uppercase_caption
                                                assign uppercase_heading = true
                                            endif
                                            assign uppercase_text = false
                                            if block.settings.text_style == 'section-heading' and settings.uppercase_section_headings
                                              assign uppercase_text = true
                                            elsif block.settings.text_style == 'secondary-heading' and settings.uppercase_secondary_headings
                                              assign uppercase_text = true
                                            elsif block.settings.text_style == 'subheading-font' and settings.uppercase_subheadings
                                                assign uppercase_text = true
                                            elsif block.settings.text_style == 'body-font' and settings.uppercase_body
                                                assign uppercase_text = true
                                            elsif block.settings.text_style == 'caption-font' and settings.uppercase_caption
                                                assign uppercase_text = true
                                            endif

                                            assign heading_text = block.settings.heading
                                            assign processed_text = ''
                                            assign split_text = heading_text | split: '['

                                            for part in split_text
                                              if part contains ']'
                                                assign split_bracket = part | split: ']'
                                                assign highlight_text = split_bracket[0]
                                                assign after_bracket = split_bracket[1]
                                                assign processed_text = processed_text | append: '<span class="highlight"><span>' | append: highlight_text | append: '</span></span>' | append: after_bracket
                                              else
                                                assign processed_text = processed_text | append: part
                                              endif
                                            endfor

                                            assign final_text = ''
                                            assign split_text_curly = processed_text | split: '{'

                                            for part in split_text_curly
                                              if part contains '}'
                                                assign split_curly = part | split: '}'
                                                assign styled_text = split_curly[0]
                                                assign after_curly = split_curly[1]
                                                assign final_text = final_text | append: '<span class="styled">' | append: styled_text | append: '</span>' | append: after_curly
                                              else
                                                assign final_text = final_text | append: part
                                              endif
                                            endfor
                                          -%}
                                          <p class="multicolumn__info-title custom-heading {{ block.settings.heading_style }}{% if uppercase_heading %} uppercase{% endif %}{% if block.settings.heading_style == 'subheading-font' and settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}">
                                            {% if block.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}<b>{% endif %}{{ final_text }}{% if block.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}</b>{% endif %}
                                          </p>
                                        {% endif %}
                                        {% if block.settings.text != blank %}
                                            <div class="multicolumn__info-text richtext rte link-underline {{ block.settings.text_style }}
                                              {% if block.settings.text_style == 'subheading-font' %}{% if settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}{% if settings.uppercase_subheadings %} uppercase{% endif %}{% if settings.bolder_subheadings_font %} bold{% endif %}
                                              {% else %}{% if uppercase_text %} uppercase{% endif %}{% endif %}">
                                              {% if block.settings.link != blank %}<object>{% endif %}{{ block.settings.text }}{% if block.settings.link != blank %}</object>{% endif %}
                                            </div>
                                        {% endif %}
                                        {% if block.settings.button_label != blank or block.settings.button_icon != blank %}
                                          <div class="multicolumn__info-button{% if block.settings.button_label != blank and block.settings.button_icon != blank %} button-block--small-padding{% endif %}">
                                              {%- if block.settings.button_link != blank -%}{% if block.settings.link != blank %}<object>{% endif %}<a href="{{ block.settings.button_link }}" {% if block.settings.target_blank %}target="_blank"{% endif %} class="button {{ block.settings.button_style }}-button body-font button--secondary{% if settings.use_heading_font_secondary_buttons %} heading-font-style{% endif %}{% if settings.uppercase_secondary_buttons %} uppercase{% endif %}{% if block.settings.button_icon != blank %} button-with-icon{% if block.settings.swap_button_icon %} icon--swap{% endif %}{% endif %}">{%- else -%}
                                              <span disabled class="button {{ block.settings.button_style }}-button body-font button--secondary{% if settings.use_heading_font_secondary_buttons %} heading-font-style{% endif %}{% if settings.uppercase_secondary_buttons %} uppercase{% endif %}{% if block.settings.button_icon != blank %} button-with-icon{% if block.settings.swap_button_icon %} icon--swap{% endif %}{% endif %}">{%- endif -%}
                                                {% if block.settings.button_icon != blank %}
                                                  {%- liquid
                                                    assign icon_name = block.settings.button_icon | split: '/'
                                                    if icon_name.size == 3
                                                        assign file_name = icon_name.first | append: '_' | append: icon_name[1]
                                                    elsif icon_name.size == 2
                                                        assign file_name = icon_name.first
                                                    endif
                                                    assign icon = icon_name.last
                                                  -%}
                                                  <span class="icon-accordion flex--row icon--small">{% render 'catalog-icons', file_name: file_name, icon: icon %}</span>
                                                {% endif %}
                                                {% if settings.bolder_secondary_buttons_font %}<b>{% endif %}{{ block.settings.button_label }}{% if settings.bolder_secondary_buttons_font %}</b>{% endif %}
                                              {%- if block.settings.button_link != blank -%}</a>{% if block.settings.link != blank %}</object>{% endif %}{%- else -%}</span>{%- endif -%}
                                          </div>
                                      {% endif %}
                                    </div>
                                {% endif %}
                                {% if block.settings.link != blank %}</a>{% else %}</div>{% endif %}
                            </div>
                        {%- when 'text' -%}
                            {% if block.settings.heading != blank or block.settings.text != blank or block.settings.button_label != blank %}
                              <div class="{% if section.settings.enable_masonry %}grid-item {% endif %}grid-item-desktop--{{ columns }} grid-item-mobile--{{ mobile_columns }} multicolumn__item {% if full_width %}multicolumn__item--full-width{% endif %} {{ block.settings.text_alignment }}" {{ block.shopify_attributes }}>
                                {% if block.settings.link != blank %}<a href="{{ block.settings.link }}" class="multicolumn__item-link multicolumn__item-wrapper color-{{ block.settings.color_scheme }}{% if block.settings.color_scheme != section.settings.color_scheme %} with-color{% endif %}" {% if block.settings.block_target_blank %}target="_blank"{% endif %}>
                                {% else %}<div class="multicolumn__item-wrapper color-{{ block.settings.color_scheme }}{% if block.settings.color_scheme != section.settings.color_scheme %} with-color{% endif %}">{% endif %}
                                  <div class="multicolumn__info flex--column">
                                    {% if block.settings.heading != blank %}
                                      {%- liquid
                                        assign uppercase_heading = false
                                        if block.settings.heading_style == 'section-heading' and settings.uppercase_section_headings
                                            assign uppercase_heading = true
                                        elsif block.settings.heading_style == 'page-title' and settings.uppercase_page_titles
                                            assign uppercase_heading = true
                                        elsif block.settings.heading_style == 'secondary-heading' and settings.uppercase_secondary_headings
                                          assign uppercase_heading = true
                                        elsif block.settings.heading_style == 'subheading-font' and settings.uppercase_subheadings
                                            assign uppercase_heading = true
                                        elsif block.settings.heading_style == 'body-font' and settings.uppercase_body
                                            assign uppercase_heading = true
                                        elsif block.settings.heading_style == 'caption-font' and settings.uppercase_caption
                                            assign uppercase_heading = true
                                        endif
                                        assign uppercase_text = false
                                        if block.settings.text_style == 'section-heading' and settings.uppercase_section_headings
                                          assign uppercase_text = true
                                        elsif block.settings.text_style == 'secondary-heading' and settings.uppercase_secondary_headings
                                          assign uppercase_text = true
                                        elsif block.settings.text_style == 'subheading-font' and settings.uppercase_subheadings
                                            assign uppercase_text = true
                                        elsif block.settings.text_style == 'body-font' and settings.uppercase_body
                                            assign uppercase_text = true
                                        elsif block.settings.text_style == 'caption-font' and settings.uppercase_caption
                                            assign uppercase_text = true
                                        endif

                                        assign heading_text = block.settings.heading
                                        assign processed_text = ''
                                        assign split_text = heading_text | split: '['

                                        for part in split_text
                                          if part contains ']'
                                            assign split_bracket = part | split: ']'
                                            assign highlight_text = split_bracket[0]
                                            assign after_bracket = split_bracket[1]
                                            assign processed_text = processed_text | append: '<span class="highlight"><span>' | append: highlight_text | append: '</span></span>' | append: after_bracket
                                          else
                                            assign processed_text = processed_text | append: part
                                          endif
                                        endfor

                                        assign final_text = ''
                                        assign split_text_curly = processed_text | split: '{'

                                        for part in split_text_curly
                                          if part contains '}'
                                            assign split_curly = part | split: '}'
                                            assign styled_text = split_curly[0]
                                            assign after_curly = split_curly[1]
                                            assign final_text = final_text | append: '<span class="styled">' | append: styled_text | append: '</span>' | append: after_curly
                                          else
                                            assign final_text = final_text | append: part
                                          endif
                                        endfor
                                      -%}
                                        <p class="multicolumn__info-title custom-heading {{ block.settings.heading_style }}{% if uppercase_heading %} uppercase{% endif %}{% if block.settings.heading_style == 'subheading-font' and settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}">
                                          {% if block.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}<b>{% endif %}{{ final_text }}{% if block.settings.heading_style == 'subheading-font' and settings.bolder_subheadings_font %}</b>{% endif %}
                                        </p>
                                    {% endif %}
                                    {% if block.settings.text != blank %}
                                        <div class="multicolumn__info-text richtext rte link-underline {{ block.settings.text_style }}
                                          {% if block.settings.text_style == 'subheading-font' %}{% if settings.use_heading_font_subheadings %} subheading-heading-font{% endif %}{% if settings.uppercase_subheadings %} uppercase{% endif %}{% if settings.bolder_subheadings_font %} bold{% endif %}
                                          {% else %}{% if uppercase_text %} uppercase{% endif %}{% endif %}">
                                          {% if block.settings.link != blank %}<object>{% endif %}{{ block.settings.text }}{% if block.settings.link != blank %}</object>{% endif %}
                                        </div>
                                    {% endif %}
                                    {% if block.settings.button_label != blank or block.settings.button_icon != blank %}
                                      <div class="multicolumn__info-button{% if block.settings.button_label != blank and block.settings.button_icon != blank %} button-block--small-padding{% endif %}">
                                          {%- if block.settings.button_link != blank -%}{% if block.settings.link != blank %}<object>{% endif %}<a href="{{ block.settings.button_link }}" {% if block.settings.target_blank %}target="_blank"{% endif %} class="button {{ block.settings.button_style }}-button body-font button--secondary{% if settings.use_heading_font_secondary_buttons %} heading-font-style{% endif %}{% if settings.uppercase_secondary_buttons %} uppercase{% endif %}{% if block.settings.button_icon != blank %} button-with-icon{% if block.settings.swap_button_icon %} icon--swap{% endif %}{% endif %}">{%- else -%}
                                          <span disabled class="button {{ block.settings.button_style }}-button body-font button--secondary{% if settings.use_heading_font_secondary_buttons %} heading-font-style{% endif %}{% if settings.uppercase_secondary_buttons %} uppercase{% endif %}{% if block.settings.button_icon != blank %} button-with-icon{% if block.settings.swap_button_icon %} icon--swap{% endif %}{% endif %}">{%- endif -%}
                                            {% if block.settings.button_icon != blank %}
                                              {%- liquid
                                                assign icon_name = block.settings.button_icon | split: '/'
                                                if icon_name.size == 3
                                                    assign file_name = icon_name.first | append: '_' | append: icon_name[1]
                                                elsif icon_name.size == 2
                                                    assign file_name = icon_name.first
                                                endif
                                                assign icon = icon_name.last
                                              -%}
                                              <span class="icon-accordion flex--row icon--small">{% render 'catalog-icons', file_name: file_name, icon: icon %}</span>
                                            {% endif %}
                                            {% if settings.bolder_secondary_buttons_font %}<b>{% endif %}{{ block.settings.button_label }}{% if settings.bolder_secondary_buttons_font %}</b>{% endif %}
                                          {%- if block.settings.button_link != blank -%}</a>{% if block.settings.link != blank %}</object>{% endif %}{%- else -%}</span>{%- endif -%}
                                      </div>
                                  {% endif %}
                                  </div>
                                {% if block.settings.link != blank %}</a>{% else %}</div>{% endif %}
                              </div>
                            {% endif %}
                    {%- endcase -%}
                {%- endfor -%}
            </div>
          {% if section.settings.enable_masonry %}</cascading-grid>{% endif %} 
        {% endif %}
      {% if section_framing and section.settings.full_width == false %}</div></div>{% endif %}
    </div>
</div>
{% endif %}

{% schema %}
{
  "name": "t:sections.multicolumn.name",
  "tag": "section",
  "class": "section-multicolumn",
  "settings": [
    {
      "type": "text",
      "id": "subheading",
      "label": "t:sections.all.settings_titles.subheading.subheading.label"
    },
    {
      "type": "select",
      "id": "subheading_style",
      "options": [
        {
          "value": "caption-font",
          "label": "t:sections.all.headings_style.options__6.label"
        },
        {
          "value": "body-font",
          "label": "t:sections.all.headings_style.options__1.label"
        },
        {
          "value": "subheading-font",
          "label": "t:sections.all.headings_style.options__2.label"
        },
        {
          "value": "secondary-heading",
          "label": "t:sections.all.headings_style.options__3.label"
        },
        {
          "value": "section-heading",
          "label": "t:sections.all.headings_style.options__4.label"
        }
      ],
      "default": "subheading-font",
      "label": "t:sections.all.headings_style.subheading_style.label"
    },
    {
      "type": "select",
      "id": "subheading_tag",
      "options": [
        {
            "value": "h1",
            "label": "t:sections.all.tag.options__1.label"
        },
        {
            "value": "h2",
            "label": "t:sections.all.tag.options__2.label"
        },
        {
            "value": "h3",
            "label": "t:sections.all.tag.options__3.label"
        },
        {
            "value": "h4",
            "label": "t:sections.all.tag.options__4.label"
        },
        {
            "value": "h5",
            "label": "t:sections.all.tag.options__5.label"
        },
        {
            "value": "h6",
            "label": "t:sections.all.tag.options__6.label"
        },
        {
            "value": "div",
            "label": "t:sections.all.tag.options__7.label"
        },
        {
            "value": "span",
            "label": "t:sections.all.tag.options__8.label"
        }, 
        {
            "value": "p",
            "label": "t:sections.all.tag.options__9.label"
        }
        ],
        "default": "h3",
        "label": "t:sections.all.tag.subheading_tag.label"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "t:sections.all.settings_titles.heading.heading.label",
      "info": "t:sections.all.settings_titles.heading.heading.info"
    },
    {
      "type": "select",
      "id": "heading_style",
      "options": [
        {
          "value": "caption-font",
          "label": "t:sections.all.headings_style.options__6.label"
        },
        {
          "value": "body-font",
          "label": "t:sections.all.headings_style.options__1.label"
        },
        {
          "value": "subheading-font",
          "label": "t:sections.all.headings_style.options__2.label"
        },
        {
          "value": "secondary-heading",
          "label": "t:sections.all.headings_style.options__3.label"
        },
        {
          "value": "section-heading",
          "label": "t:sections.all.headings_style.options__4.label"
        },
        {
          "value": "page-title",
          "label": "t:sections.all.headings_style.options__5.label"
        }
      ],
      "default": "section-heading",
      "label": "t:sections.all.headings_style.heading_style.label"
    },
    {
      "type": "select",
      "id": "heading_tag",
      "options": [
        {
            "value": "h1",
            "label": "t:sections.all.tag.options__1.label"
        },
        {
            "value": "h2",
            "label": "t:sections.all.tag.options__2.label"
        },
        {
            "value": "h3",
            "label": "t:sections.all.tag.options__3.label"
        },
        {
            "value": "h4",
            "label": "t:sections.all.tag.options__4.label"
        },
        {
            "value": "h5",
            "label": "t:sections.all.tag.options__5.label"
        },
        {
            "value": "h6",
            "label": "t:sections.all.tag.options__6.label"
        },
        {
            "value": "div",
            "label": "t:sections.all.tag.options__7.label"
        },
        {
            "value": "span",
            "label": "t:sections.all.tag.options__8.label"
        }, 
        {
            "value": "p",
            "label": "t:sections.all.tag.options__9.label"
        }
        ],
        "default": "h2",
        "label": "t:sections.all.tag.heading_tag.label"
    },
    {
      "type": "checkbox",
      "id": "center_text",
      "default": true,
      "label": "t:sections.all.alignment.center_text.label"
    },
    {
      "type": "select",
      "id": "desktop_columns",
      "options": [
        {
          "value": "2",
          "label": "t:sections.all.columns.options__2.label"
        },
        {
          "value": "3",
          "label": "t:sections.all.columns.options__3.label"
        },
        {
          "value": "4",
          "label": "t:sections.all.columns.options__4.label"
        },
        {
          "value": "5",
          "label": "t:sections.all.columns.options__5.label"
        }
      ],
      "default": "2",
      "label": "t:sections.all.columns.desktop_columns.label"
    },
    {
      "type": "select",
      "id": "mobile_columns",
      "options": [
        {
          "value": "1",
          "label": "t:sections.all.columns.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.all.columns.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.all.columns.mobile_columns.label"
    },
    {
      "type": "checkbox",
      "id": "enable_masonry",
      "default": true,
      "label": "t:sections.multicolumn.settings.enable_masonry.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.settings_titles.content_header.content"
    },
    {
      "type": "select",
      "id": "media_radius",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.corner_radius.options__7.label"
        },
        {
          "value": "0px",
          "label": "t:sections.all.corner_radius.options__1.label"
        },
        {
          "value": "3px",
          "label": "t:sections.all.corner_radius.options__2.label"
        },
        {
          "value": "5px",
          "label": "t:sections.all.corner_radius.options__3.label"
        },
        {
          "value": "12px",
          "label": "t:sections.all.corner_radius.options__4.label"
        },
        {
          "value": "16px",
          "label": "t:sections.all.corner_radius.options__5.label"
        },
        {
          "value": "2000px",
          "label": "t:sections.all.corner_radius.options__6.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.corner_radius.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.settings_titles.section_layout_header.content"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "default": false,
      "label": "t:sections.all.full_width.label"
    },
    {
      "type": "select",
      "id": "grid_style",
      "options": [
        {
          "value": "page",
          "label": "t:sections.all.grid_style.options__1.label"
        },
        {
          "value": "secondary",
          "label": "t:sections.all.grid_style.options__3.label"
        },
        {
          "value": "alternative",
          "label": "t:sections.all.grid_style.options__2.label"
        }
      ],
      "default": "page",
      "label": "t:sections.all.grid_style.label"
    },
    {
      "type": "checkbox",
      "id": "disable_max_width",
      "default": false,
      "label": "t:sections.all.disable_max_width.label"
    },
    {
      "type": "checkbox",
      "id": "disable_grid_gaps",
      "default": false,
      "label": "t:sections.all.disable_grid_gaps.label"
    },
    {
      "type": "checkbox",
      "id": "show_bottom_line",
      "default": false,
      "label": "t:sections.all.show_bottom_line.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.colors.header.content"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.color_scheme.label",
      "default": "background-1"
    },
    {
      "type": "select",
      "id": "section_framing",
      "options": [
        {
          "value": "disable",
          "label": "t:sections.all.section_framing.options__1.label"
        },
        {
          "value": "enable",
          "label": "t:sections.all.section_framing.options__2.label"
        },
        {
          "value": "grid",
          "label": "t:sections.all.section_framing.options__3.label"
        }
      ],
      "default": "disable",
      "label": "t:sections.all.section_framing.label",
      "info": "t:sections.all.section_framing.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing.header.content"
    },
    {
      "type": "range",
      "id": "top_spacing",
      "min": 0,
      "max": 2,
      "step": 0.1,
      "unit": "x",
      "label": "t:sections.all.spacing.top_spacing.label",
      "default": 1
    },
    {
      "type": "range",
      "id": "bottom_spacing",
      "min": 0,
      "max": 2,
      "step": 0.1,
      "unit": "x",
      "label": "t:sections.all.spacing.bottom_spacing.label",
      "default": 1
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "t:blocks.image.name",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.all.media.image.image.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.all.link.label"
        },
        {
          "type": "checkbox",
          "id": "block_target_blank",
          "default": false,
          "label": "t:sections.all.link.target_blank.label"
        },
        {
          "type": "select",
          "id": "media_ratio",
          "options": [
            {
              "value": "auto",
              "label": "t:sections.all.media.media_ratio.options__1.label"
            },
            {
              "value": "1/1",
              "label": "t:sections.all.media.media_ratio.options__2.label"
            },
            {
              "value": "4/5",
              "label": "t:sections.all.media.media_ratio.options__3.label"
            },
            {
              "value": "2/3",
              "label": "t:sections.all.media.media_ratio.options__4.label"
            },
            {
              "value": "4/3",
              "label": "t:sections.all.media.media_ratio.options__5.label"
            },
            {
              "value": "3/2",
              "label": "t:sections.all.media.media_ratio.options__6.label"
            },
            {
              "value": "16/9",
              "label": "t:sections.all.media.media_ratio.options__7.label"
            },
            {
              "value": "4/1",
              "label": "t:sections.all.media.media_ratio.options__8.label"
            }
          ],
          "default": "auto",
          "label": "t:sections.all.media.media_ratio.label"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "t:sections.all.settings_titles.heading.heading.label",
          "info": "t:sections.all.settings_titles.heading.heading.info",
          "default": "Image heading"
        },
        {
          "type": "select",
          "id": "heading_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            },
            {
              "value": "page-title",
              "label": "t:sections.all.headings_style.options__5.label"
            }
          ],
          "default": "secondary-heading",
          "label": "t:sections.all.headings_style.heading_style.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "t:sections.all.settings_titles.text.text.label",
          "default": "<p>Pair text with image or loop video to focus on your featured product, collection, or promotion. Tell a story, describe your brand or share announcements.</p>"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            }
          ],
          "default": "body-font",
          "label": "t:sections.all.headings_style.text_style.label"
        },
        {
          "type": "text_alignment",
          "id": "text_alignment",
          "label": "t:sections.all.alignment.text_alignment.label",
          "default": "left"
        },
        {
          "type": "text",
          "id": "button_label",
          "default": "Discover",
          "label": "t:sections.all.buttons.button_label.label"
        },
        {
          "type": "text",
          "id": "button_icon",
          "label": "t:sections.all.buttons.button_icon.label",
          "info": "t:sections.all.icons.icon.info"
        },
        {
          "type": "checkbox",
          "id": "swap_button_icon",
          "default": false,
          "label": "t:sections.all.icons.swap_icon_position.label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.all.buttons.button_link.label"
        },
        {
          "type": "checkbox",
          "id": "target_blank",
          "default": false,
          "label": "t:sections.all.link.target_blank.label"
        },
        {
          "type": "select",
          "id": "button_style",
          "options": [
            {
              "value": "solid",
              "label": "t:sections.all.buttons.button_styles.options__1.label"
            },
            {
              "value": "outlined",
              "label": "t:sections.all.buttons.button_styles.options__2.label"
            },
            {
              "value": "link",
              "label": "t:sections.all.buttons.button_styles.options__3.label"
            }
          ],
          "default": "outlined",
          "label": "t:sections.all.buttons.button_styles.button_style.label"
        },
        {
          "type": "header",
          "content": "t:sections.all.colors.header.content"
        },
        {
          "type": "color_scheme",
          "id": "color_scheme",
          "label": "t:sections.all.colors.color_scheme.label",
          "default": "background-1"
        }
      ]
    },
    {
      "type": "loop_video",
      "name": "t:blocks.loop_video.name",
      "settings": [
        {
          "type": "video",
          "id": "video_load",
          "label": "t:sections.all.media.video.video_load.label",
          "info": "t:sections.all.media.video.video_load.info"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.all.link.label"
        },
        {
          "type": "checkbox",
          "id": "block_target_blank",
          "default": false,
          "label": "t:sections.all.link.target_blank.label"
        },
        {
          "type": "select",
          "id": "media_ratio",
          "options": [
            {
              "value": "auto",
              "label": "t:sections.all.media.media_ratio.options__1.label"
            },
            {
              "value": "1/1",
              "label": "t:sections.all.media.media_ratio.options__2.label"
            },
            {
              "value": "4/5",
              "label": "t:sections.all.media.media_ratio.options__3.label"
            },
            {
              "value": "2/3",
              "label": "t:sections.all.media.media_ratio.options__4.label"
            },
            {
              "value": "4/3",
              "label": "t:sections.all.media.media_ratio.options__5.label"
            },
            {
              "value": "3/2",
              "label": "t:sections.all.media.media_ratio.options__6.label"
            },
            {
              "value": "16/9",
              "label": "t:sections.all.media.media_ratio.options__7.label"
            },
            {
              "value": "4/1",
              "label": "t:sections.all.media.media_ratio.options__8.label"
            }
          ],
          "default": "auto",
          "label": "t:sections.all.media.media_ratio.label"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "t:sections.all.settings_titles.heading.heading.label",
          "info": "t:sections.all.settings_titles.heading.heading.info",
          "default": "Loop video heading"
        },
        {
          "type": "select",
          "id": "heading_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            },
            {
              "value": "page-title",
              "label": "t:sections.all.headings_style.options__5.label"
            }
          ],
          "default": "secondary-heading",
          "label": "t:sections.all.headings_style.heading_style.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "t:sections.all.settings_titles.text.text.label",
          "default": "<p>Pair text with image or loop video to focus on your featured product, collection, or promotion. Tell a story, describe your brand or share announcements.</p>"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            }
          ],
          "default": "body-font",
          "label": "t:sections.all.headings_style.text_style.label"
        },
        {
          "type": "text_alignment",
          "id": "text_alignment",
          "label": "t:sections.all.alignment.text_alignment.label",
          "default": "left"
        },
        {
          "type": "text",
          "id": "button_label",
          "default": "Discover",
          "label": "t:sections.all.buttons.button_label.label"
        },
        {
          "type": "text",
          "id": "button_icon",
          "label": "t:sections.all.buttons.button_icon.label",
          "info": "t:sections.all.icons.icon.info"
        },
        {
          "type": "checkbox",
          "id": "swap_button_icon",
          "default": false,
          "label": "t:sections.all.icons.swap_icon_position.label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.all.buttons.button_link.label"
        },
        {
          "type": "checkbox",
          "id": "target_blank",
          "default": false,
          "label": "t:sections.all.link.target_blank.label"
        },
        {
          "type": "select",
          "id": "button_style",
          "options": [
            {
              "value": "solid",
              "label": "t:sections.all.buttons.button_styles.options__1.label"
            },
            {
              "value": "outlined",
              "label": "t:sections.all.buttons.button_styles.options__2.label"
            },
            {
              "value": "link",
              "label": "t:sections.all.buttons.button_styles.options__3.label"
            }
          ],
          "default": "outlined",
          "label": "t:sections.all.buttons.button_styles.button_style.label"
        },
        {
          "type": "header",
          "content": "t:sections.all.settings_titles.video_controls.content"
        },
        {
          "type": "checkbox",
          "id": "enable_mute",
          "default": false,
          "label": "t:sections.all.settings_titles.enable_mute.label"
        },
        {
          "type": "checkbox",
          "id": "enable_pause",
          "default": false,
          "label": "t:sections.all.settings_titles.enable_pause.label"
        },
        {
          "type": "select",
          "id": "control_horizontal_position",
          "options": [
            {
              "value": "flex-start",
              "label": "t:sections.all.alignment.options__1.label"
            },
            {
              "value": "center",
              "label": "t:sections.all.alignment.options__2.label"
            },
            {
              "value": "flex-end",
              "label": "t:sections.all.alignment.options__3.label"
            }
          ],
          "default": "flex-end",
          "label": "t:sections.all.alignment.horizontal_position.label"
        },
        {
          "type": "header",
          "content": "t:sections.all.colors.header.content"
        },
        {
          "type": "color_scheme",
          "id": "color_scheme",
          "label": "t:sections.all.colors.color_scheme.label",
          "default": "background-1"
        }
      ]
    },
    {
      "type": "text",
      "name": "t:blocks.text.name",
      "settings": [
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.all.link.label"
        },
        {
          "type": "checkbox",
          "id": "block_target_blank",
          "default": false,
          "label": "t:sections.all.link.target_blank.label"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "t:sections.all.settings_titles.heading.heading.label",
          "info": "t:sections.all.settings_titles.heading.heading.info",
          "default": "Text heading"
        },
        {
          "type": "select",
          "id": "heading_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            },
            {
              "value": "page-title",
              "label": "t:sections.all.headings_style.options__5.label"
            }
          ],
          "default": "secondary-heading",
          "label": "t:sections.all.headings_style.heading_style.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "t:sections.all.settings_titles.text.text.label",
          "default": "<p>Tell a story, describe your brand or share announcements.</p>"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "caption-font",
              "label": "t:sections.all.headings_style.options__6.label"
            },
            {
              "value": "body-font",
              "label": "t:sections.all.headings_style.options__1.label"
            },
            {
              "value": "subheading-font",
              "label": "t:sections.all.headings_style.options__2.label"
            },
            {
              "value": "secondary-heading",
              "label": "t:sections.all.headings_style.options__3.label"
            },
            {
              "value": "section-heading",
              "label": "t:sections.all.headings_style.options__4.label"
            }
          ],
          "default": "body-font",
          "label": "t:sections.all.headings_style.text_style.label"
        },
        {
          "type": "text_alignment",
          "id": "text_alignment",
          "label": "t:sections.all.alignment.text_alignment.label",
          "default": "left"
        },
        {
          "type": "text",
          "id": "button_label",
          "default": "Discover",
          "label": "t:sections.all.buttons.button_label.label"
        },
        {
          "type": "text",
          "id": "button_icon",
          "label": "t:sections.all.buttons.button_icon.label",
          "info": "t:sections.all.icons.icon.info"
        },
        {
          "type": "checkbox",
          "id": "swap_button_icon",
          "default": false,
          "label": "t:sections.all.icons.swap_icon_position.label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.all.buttons.button_link.label"
        },
        {
          "type": "checkbox",
          "id": "target_blank",
          "default": false,
          "label": "t:sections.all.link.target_blank.label"
        },
        {
          "type": "select",
          "id": "button_style",
          "options": [
            {
              "value": "solid",
              "label": "t:sections.all.buttons.button_styles.options__1.label"
            },
            {
              "value": "outlined",
              "label": "t:sections.all.buttons.button_styles.options__2.label"
            },
            {
              "value": "link",
              "label": "t:sections.all.buttons.button_styles.options__3.label"
            }
          ],
          "default": "outlined",
          "label": "t:sections.all.buttons.button_styles.button_style.label"
        },
        {
          "type": "header",
          "content": "t:sections.all.colors.header.content"
        },
        {
          "type": "color_scheme",
          "id": "color_scheme",
          "label": "t:sections.all.colors.color_scheme.label",
          "default": "background-1"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.multicolumn.name",
      "blocks": [
        {
          "type": "image"
        },
        {
          "type": "loop_video"
        },
        {
          "type": "text"
        }
      ]
    }
  ],
  "enabled_on": {
    "templates": ["*"],
    "groups": [
      "footer"
    ]
  }
}
{% endschema %}